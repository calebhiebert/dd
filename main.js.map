{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/action-queue.service.ts","webpack:///./src/app/action.guard.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/attributes.ts","webpack:///./src/app/auth.interceptor.ts","webpack:///./src/app/campaign.component.css","webpack:///./src/app/campaign.component.html","webpack:///./src/app/campaign.component.ts","webpack:///./src/app/campaign.service.ts","webpack:///./src/app/campaign/campaign-form/campaign-form.component.css","webpack:///./src/app/campaign/campaign-form/campaign-form.component.html","webpack:///./src/app/campaign/campaign-form/campaign-form.component.ts","webpack:///./src/app/campaign/campaign-landing/campaign-landing.component.html","webpack:///./src/app/campaign/campaign-landing/campaign-landing.component.scss","webpack:///./src/app/campaign/campaign-landing/campaign-landing.component.ts","webpack:///./src/app/campaign/campaign-list/campaign-list.component.css","webpack:///./src/app/campaign/campaign-list/campaign-list.component.html","webpack:///./src/app/campaign/campaign-list/campaign-list.component.ts","webpack:///./src/app/campaign/campaign-settings/campaign-settings.component.css","webpack:///./src/app/campaign/campaign-settings/campaign-settings.component.html","webpack:///./src/app/campaign/campaign-settings/campaign-settings.component.ts","webpack:///./src/app/campaign/campaign-settings/entity-types/entity-types.component.css","webpack:///./src/app/campaign/campaign-settings/entity-types/entity-types.component.html","webpack:///./src/app/campaign/campaign-settings/entity-types/entity-types.component.ts","webpack:///./src/app/campaign/campaign-settings/experience-table-editor/experience-table-editor.component.css","webpack:///./src/app/campaign/campaign-settings/experience-table-editor/experience-table-editor.component.html","webpack:///./src/app/campaign/campaign-settings/experience-table-editor/experience-table-editor.component.ts","webpack:///./src/app/campaign/invite-manager/invite-manager.component.css","webpack:///./src/app/campaign/invite-manager/invite-manager.component.html","webpack:///./src/app/campaign/invite-manager/invite-manager.component.ts","webpack:///./src/app/confirmation-modal/confirmation-modal.component.css","webpack:///./src/app/confirmation-modal/confirmation-modal.component.html","webpack:///./src/app/confirmation-modal/confirmation-modal.component.ts","webpack:///./src/app/entity.service.ts","webpack:///./src/app/entity.ts","webpack:///./src/app/entity/dynamic-attribute-form/dynamic-attribute-form.component.css","webpack:///./src/app/entity/dynamic-attribute-form/dynamic-attribute-form.component.html","webpack:///./src/app/entity/dynamic-attribute-form/dynamic-attribute-form.component.ts","webpack:///./src/app/entity/entity-attribute-row-editor/entity-attribute-row-editor.component.css","webpack:///./src/app/entity/entity-attribute-row-editor/entity-attribute-row-editor.component.html","webpack:///./src/app/entity/entity-attribute-row-editor/entity-attribute-row-editor.component.ts","webpack:///./src/app/entity/entity-form/entity-creation-form/entity-creation-form.component.css","webpack:///./src/app/entity/entity-form/entity-creation-form/entity-creation-form.component.html","webpack:///./src/app/entity/entity-form/entity-creation-form/entity-creation-form.component.ts","webpack:///./src/app/entity/entity-form/entity-form.component.css","webpack:///./src/app/entity/entity-form/entity-form.component.html","webpack:///./src/app/entity/entity-form/entity-form.component.ts","webpack:///./src/app/entity/entity-form/entity-type-selector/entity-type-selector.component.html","webpack:///./src/app/entity/entity-form/entity-type-selector/entity-type-selector.component.scss","webpack:///./src/app/entity/entity-form/entity-type-selector/entity-type-selector.component.ts","webpack:///./src/app/entity/entity-view/entity-attribute-editor-modal/entity-attribute-editor-modal.component.css","webpack:///./src/app/entity/entity-view/entity-attribute-editor-modal/entity-attribute-editor-modal.component.html","webpack:///./src/app/entity/entity-view/entity-attribute-editor-modal/entity-attribute-editor-modal.component.ts","webpack:///./src/app/entity/entity-view/entity-view.component.html","webpack:///./src/app/entity/entity-view/entity-view.component.scss","webpack:///./src/app/entity/entity-view/entity-view.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/image-upload/image-upload.component.html","webpack:///./src/app/image-upload/image-upload.component.scss","webpack:///./src/app/image-upload/image-upload.component.ts","webpack:///./src/app/invite/invite.component.css","webpack:///./src/app/invite/invite.component.html","webpack:///./src/app/invite/invite.component.ts","webpack:///./src/app/item.service.ts","webpack:///./src/app/items/attribute-editor/attribute-editor.component.css","webpack:///./src/app/items/attribute-editor/attribute-editor.component.html","webpack:///./src/app/items/attribute-editor/attribute-editor.component.ts","webpack:///./src/app/items/inventory-selector/inventory-selector.component.html","webpack:///./src/app/items/inventory-selector/inventory-selector.component.scss","webpack:///./src/app/items/inventory-selector/inventory-selector.component.ts","webpack:///./src/app/items/item-edit/item-edit.component.css","webpack:///./src/app/items/item-edit/item-edit.component.html","webpack:///./src/app/items/item-edit/item-edit.component.ts","webpack:///./src/app/items/item-form/item-form.component.css","webpack:///./src/app/items/item-form/item-form.component.html","webpack:///./src/app/items/item-form/item-form.component.ts","webpack:///./src/app/items/item-manager/item-manager.component.css","webpack:///./src/app/items/item-manager/item-manager.component.html","webpack:///./src/app/items/item-manager/item-manager.component.ts","webpack:///./src/app/items/item-view-list/item-view-list.component.html","webpack:///./src/app/items/item-view-list/item-view-list.component.scss","webpack:///./src/app/items/item-view-list/item-view-list.component.ts","webpack:///./src/app/logged-in.guard.ts","webpack:///./src/app/login-page.guard.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/register/register.component.css","webpack:///./src/app/login/register/register.component.html","webpack:///./src/app/login/register/register.component.ts","webpack:///./src/app/modal/modal.component.css","webpack:///./src/app/modal/modal.component.html","webpack:///./src/app/modal/modal.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/paginator/paginator.component.css","webpack:///./src/app/paginator/paginator.component.html","webpack:///./src/app/paginator/paginator.component.ts","webpack:///./src/app/quest/quest-form/quest-form.component.css","webpack:///./src/app/quest/quest-form/quest-form.component.html","webpack:///./src/app/quest/quest-form/quest-form.component.ts","webpack:///./src/app/quest/quest-manager/quest-manager.component.css","webpack:///./src/app/quest/quest-manager/quest-manager.component.html","webpack:///./src/app/quest/quest-manager/quest-manager.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionQueueService {\n  private _queue: IAction[];\n\n  constructor() {}\n\n  public load() {\n    const qJson = localStorage.getItem('action-queue');\n\n    if (qJson) {\n      this._queue = JSON.parse(qJson);\n    } else {\n      this._queue = [];\n    }\n  }\n\n  public save() {\n    if (this._queue) {\n      localStorage.setItem('action-queue', JSON.stringify(this._queue));\n    }\n  }\n\n  public clear() {\n    localStorage.removeItem('action-queue');\n    this._queue = undefined;\n  }\n\n  public get queue() {\n    this.load();\n    return this._queue;\n  }\n}\n\nexport interface IAction {\n  type: ActionType;\n  data: { [key: string]: any };\n}\n\nexport enum ActionType {\n  ACCOUNT_SETUP,\n  INVITE,\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { ActionQueueService, ActionType } from './action-queue.service';\nimport { ActionSequence } from 'protractor';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActionGuard implements CanActivate {\n  constructor(private actions: ActionQueueService, private router: Router) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n    const queue = this.actions.queue;\n\n    if (queue.length === 0) {\n      return true;\n    } else {\n      const action = queue.pop();\n      this.actions.save();\n      console.log('Routing based on action', action);\n\n      switch (action.type) {\n        case ActionType.ACCOUNT_SETUP:\n          this.router.navigate(['register']);\n          break;\n        case ActionType.INVITE:\n          this.router.navigate(['invite', action.data.inviteId]);\n          break;\n      }\n    }\n\n    return false;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CampaignComponent } from './campaign.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoggedInGuard } from './logged-in.guard';\nimport { LoginPageGuard } from './login-page.guard';\nimport { EntityFormComponent } from './entity/entity-form/entity-form.component';\nimport { EntityViewComponent } from './entity/entity-view/entity-view.component';\nimport { EntityCreationFormComponent } from './entity/entity-form/entity-creation-form/entity-creation-form.component';\nimport { EntityTypeSelectorComponent } from './entity/entity-form/entity-type-selector/entity-type-selector.component';\nimport { CampaignListComponent } from './campaign/campaign-list/campaign-list.component';\nimport { ItemManagerComponent } from './items/item-manager/item-manager.component';\nimport { CampaignSettingsComponent } from './campaign/campaign-settings/campaign-settings.component';\nimport { QuestManagerComponent } from './quest/quest-manager/quest-manager.component';\nimport { ItemEditComponent } from './items/item-edit/item-edit.component';\nimport { CampaignLandingComponent } from './campaign/campaign-landing/campaign-landing.component';\nimport { RegisterComponent } from './login/register/register.component';\nimport { InviteComponent } from './invite/invite.component';\nimport { ActionGuard } from './action.guard';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  { path: 'invite/:invite_id', component: InviteComponent },\n  { path: 'login', component: LoginComponent, canActivate: [LoginPageGuard] },\n  { path: 'register', component: RegisterComponent },\n  { path: 'callback', component: LoginComponent },\n  {\n    path: 'campaigns/list',\n    component: CampaignListComponent,\n    canActivate: [LoggedInGuard, ActionGuard, ActionGuard],\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    canActivate: [LoggedInGuard, ActionGuard],\n  },\n  {\n    path: 'campaigns/create',\n    component: CampaignSettingsComponent,\n    canActivate: [LoggedInGuard, ActionGuard],\n    data: {\n      editing: false,\n    },\n  },\n  {\n    path: 'campaign/manage/:id',\n    component: CampaignComponent,\n    canActivate: [LoggedInGuard, ActionGuard],\n    children: [\n      {\n        path: 'items',\n        component: ItemManagerComponent,\n      },\n      {\n        path: 'settings',\n        component: CampaignSettingsComponent,\n        data: {\n          editing: true,\n        },\n      },\n      {\n        path: 'quests',\n        component: QuestManagerComponent,\n      },\n      {\n        path: 'items/:item_id/edit',\n        component: ItemEditComponent,\n      },\n      {\n        path: 'entities/create',\n        component: EntityFormComponent,\n        data: {\n          editing: false,\n        },\n      },\n      {\n        path: 'entities/:ent_id/edit',\n        component: EntityFormComponent,\n        data: {\n          editing: true,\n        },\n      },\n    ],\n  },\n  {\n    path: 'campaigns/:id',\n    component: CampaignComponent,\n    canActivate: [LoggedInGuard, ActionGuard],\n    children: [\n      {\n        path: '',\n        pathMatch: 'full',\n        redirectTo: 'landing',\n      },\n      {\n        path: 'landing',\n        component: CampaignLandingComponent,\n      },\n      {\n        path: 'entities/selecttype',\n        component: EntityTypeSelectorComponent,\n      },\n      {\n        path: 'entities/:ent_id',\n        component: EntityViewComponent,\n      },\n      {\n        path: 'entities/:ent_type_id/create',\n        component: EntityCreationFormComponent,\n        data: {\n          editing: false,\n        },\n      },\n      {\n        path: 'entities/:ent_id/edit',\n        component: EntityCreationFormComponent,\n        data: {\n          editing: true,\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","module.exports = \"\"","module.exports = \"<dd-nav></dd-nav> <router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\nimport { Item } from './item';\n\n@Component({\n  selector: 'dd-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'ui';\n\n  constructor() {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { TruncateModule } from 'ng2-truncate';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ImageUploadComponent } from './image-upload/image-upload.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { NavComponent } from './nav/nav.component';\nimport { CampaignComponent } from './campaign.component';\nimport { PaginatorComponent } from './paginator/paginator.component';\nimport { ModalComponent } from './modal/modal.component';\nimport { ConfirmationModalComponent } from './confirmation-modal/confirmation-modal.component';\nimport { LoginComponent } from './login/login.component';\nimport { HomeComponent } from './home/home.component';\nimport { EntityAttributeRowEditorComponent } from './entity/entity-attribute-row-editor/entity-attribute-row-editor.component';\nimport { EntityFormComponent } from './entity/entity-form/entity-form.component';\nimport { EntityTypeSelectorComponent } from './entity/entity-form/entity-type-selector/entity-type-selector.component';\nimport { EntityCreationFormComponent } from './entity/entity-form/entity-creation-form/entity-creation-form.component';\nimport { EntityViewComponent } from './entity/entity-view/entity-view.component';\nimport { ItemViewListComponent } from './items/item-view-list/item-view-list.component';\nimport { ItemFormComponent } from './items/item-form/item-form.component';\nimport { AttributeEditorComponent } from './items/attribute-editor/attribute-editor.component';\nimport { ItemManagerComponent } from './items/item-manager/item-manager.component';\nimport { CampaignListComponent } from './campaign/campaign-list/campaign-list.component';\nimport { CampaignLandingComponent } from './campaign/campaign-landing/campaign-landing.component';\nimport { ItemEditComponent } from './items/item-edit/item-edit.component';\nimport { CampaignSettingsComponent } from './campaign/campaign-settings/campaign-settings.component';\nimport { EntityTypesComponent } from './campaign/campaign-settings/entity-types/entity-types.component';\nimport { DynamicAttributeFormComponent } from './entity/dynamic-attribute-form/dynamic-attribute-form.component';\nimport { InventorySelectorComponent } from './items/inventory-selector/inventory-selector.component';\nimport { ExperienceTableEditorComponent } from './campaign/campaign-settings/experience-table-editor/experience-table-editor.component';\nimport { QuestManagerComponent } from './quest/quest-manager/quest-manager.component';\nimport { EntityAttributeEditorModalComponent } from './entity/entity-view/entity-attribute-editor-modal/entity-attribute-editor-modal.component';\nimport { QuestFormComponent } from './quest/quest-form/quest-form.component';\nimport { RegisterComponent } from './login/register/register.component';\nimport { CampaignFormComponent } from './campaign/campaign-form/campaign-form.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AuthInterceptor } from './auth.interceptor';\nimport { InviteManagerComponent } from './campaign/invite-manager/invite-manager.component';\nimport { InviteComponent } from './invite/invite.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ItemViewListComponent,\n    ItemFormComponent,\n    ImageUploadComponent,\n    AttributeEditorComponent,\n    NavComponent,\n    ItemManagerComponent,\n    CampaignComponent,\n    CampaignListComponent,\n    CampaignLandingComponent,\n    ItemEditComponent,\n    PaginatorComponent,\n    CampaignSettingsComponent,\n    EntityTypesComponent,\n    EntityAttributeRowEditorComponent,\n    DynamicAttributeFormComponent,\n    EntityFormComponent,\n    ModalComponent,\n    InventorySelectorComponent,\n    ConfirmationModalComponent,\n    LoginComponent,\n    HomeComponent,\n    EntityTypeSelectorComponent,\n    EntityCreationFormComponent,\n    ExperienceTableEditorComponent,\n    QuestManagerComponent,\n    EntityViewComponent,\n    EntityAttributeEditorModalComponent,\n    QuestFormComponent,\n    RegisterComponent,\n    CampaignFormComponent,\n    InviteManagerComponent,\n    InviteComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TruncateModule,\n    HttpClientModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export interface Attribute {\n  name: string;\n  type: AttributeType;\n  data: string;\n}\n\nexport enum AttributeType {\n  STRING,\n  NUMBER,\n  ENUM,\n}\n","import {\n  HttpInterceptor,\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private login: LoginService) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    const token = localStorage.getItem('auth-token');\n\n    if (token) {\n      const cloned = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${token}`),\n      });\n\n      return next.handle(cloned);\n    } else {\n      return next.handle(req);\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"loading loading-lg\\\" *ngIf=\\\"loading\\\"></div>\\n\\n<router-outlet *ngIf=\\\"campaign\\\"></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CampaignService } from './campaign.service';\nimport { Route, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'dd-campaign',\n  templateUrl: './campaign.component.html',\n  styleUrls: ['./campaign.component.css'],\n})\nexport class CampaignComponent implements OnInit {\n  constructor(private campaignService: CampaignService, private route: ActivatedRoute) {}\n\n  ngOnInit() {\n    if (!this.loading && !this.campaign) {\n      this.route.params.subscribe((params) => {\n        this.campaignService.setSelection(params.id);\n      });\n    }\n  }\n\n  public get loading() {\n    return this.campaignService.loadingCampaign;\n  }\n\n  public get campaign() {\n    return this.campaignService.campaign;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ItemService } from './item.service';\nimport { EntityService, IEntityPreset } from './entity.service';\nimport { environment } from 'src/environments/environment';\nimport { IUser } from './user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CampaignService {\n  public campaign: ICampaign = null;\n  public loadingCampaign = false;\n\n  constructor(private http: HttpClient) {}\n\n  public async setSelection(campaignId: string) {\n    this.campaign = null;\n    this.loadingCampaign = true;\n    try {\n      const campaign = await this.getCampaign(campaignId);\n      this.campaign = campaign;\n    } catch (err) {\n      console.log('LOAD ERR', err);\n    }\n    this.loadingCampaign = false;\n  }\n\n  /**\n   * Returns a list of campaigns the user can access\n   */\n  public async getCampaigns(): Promise<ICampaign[]> {\n    return this.http\n      .get<ICampaign[]>(`${environment.apiURL}/campaigns`)\n      .toPromise();\n  }\n\n  public async getCampaign(id: string): Promise<ICampaign> {\n    return this.http\n      .get<ICampaign>(`${environment.apiURL}/campaigns/${id}`)\n      .toPromise();\n  }\n\n  public async createCampaign(campaign: ICampaign): Promise<ICampaign> {\n    return this.http\n      .post<ICampaign>(`${environment.apiURL}/campaigns`, campaign)\n      .toPromise();\n  }\n\n  public async updateCampaign(campaign: ICampaign): Promise<ICampaign> {\n    return this.http\n      .put<ICampaign>(\n        `${environment.apiURL}/campaigns/${campaign.id}`,\n        campaign\n      )\n      .toPromise();\n  }\n\n  public async getInvites(): Promise<ICampaignInvite[]> {\n    return this.http\n      .get<ICampaignInvite[]>(\n        `${environment.apiURL}/campaigninvites?campaignId=${this.campaign.id}`\n      )\n      .toPromise();\n  }\n\n  public async getInvite(id: string): Promise<ICampaignInvite> {\n    return this.http\n      .get<ICampaignInvite>(`${environment.apiURL}/campaigninvites/${id}`)\n      .toPromise();\n  }\n\n  public async createInvite(name: string): Promise<ICampaignInvite> {\n    return this.http\n      .post<ICampaignInvite>(`${environment.apiURL}/campaigninvites`, {\n        campaignId: this.campaign.id,\n        name,\n      })\n      .toPromise();\n  }\n\n  public async updateInvite(invite: ICampaignInvite): Promise<void> {\n    return this.http\n      .put<void>(`${environment.apiURL}/campaigninvites/${invite.id}`, invite)\n      .toPromise();\n  }\n\n  public async deleteInvite(token: string): Promise<void> {\n    return this.http\n      .delete<void>(`${environment.apiURL}/campaigninvites/${token}`)\n      .toPromise();\n  }\n\n  public async acceptInvite(token: string): Promise<void> {\n    return this.http\n      .post<void>(`${environment.apiURL}/campaigninvites/${token}/accept`, {})\n      .toPromise();\n  }\n\n  public async denyInvite(token: string): Promise<void> {\n    return this.http\n      .post<void>(`${environment.apiURL}/campaigninvites/${token}/decline`, {})\n      .toPromise();\n  }\n\n  public calculateLevel(xp: number): number {\n    if (!this.campaign) {\n      throw new Error('No campaign present');\n    }\n\n    const xpTable = this.campaign.experienceTable || [];\n\n    let level = 1;\n\n    for (let i = 0; i < xpTable.length; i++) {\n      const xpRequired = xpTable[i];\n\n      if (xp >= xpRequired) {\n        level++;\n      } else {\n        break;\n      }\n    }\n\n    return level;\n  }\n}\n\nexport interface ICampaign {\n  id: string;\n  name: string;\n  description: string;\n  imageId: string;\n  userId: string;\n  user?: IUser;\n  experienceTable: number[];\n  entities?: any[];\n  items?: any[];\n  entityPresets?: IEntityPreset[];\n  createdAt?: Date;\n}\n\nexport interface ICampaignInvite {\n  id: string;\n  name: string;\n  campaignId: string;\n  createdAt: Date;\n  status: CampaignInviteStatus;\n  acceptedUserId?: string;\n  user?: IUser;\n}\n\nexport enum CampaignInviteStatus {\n  PENDING,\n  REVOKED,\n  ACCEPTED,\n}\n\n// Used in mock apis, will be removed\nconst simulateDelay = (ms: number): Promise<void> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n};\n","module.exports = \"\"","module.exports = \"<div class=\\\"container grid-xl\\\" [formGroup]=\\\"formGroup\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column col-auto\\\">\\n      <dd-image-upload [formGroup]=\\\"formGroup\\\"></dd-image-upload>\\n    </div>\\n    <div class=\\\"column\\\">\\n      <div\\n        class=\\\"form-group\\\"\\n        [ngClass]=\\\"{\\n          'has-error': name.invalid && (name.dirty || name.touched)\\n        }\\\"\\n      >\\n        <label for=\\\"name\\\" class=\\\"form-label\\\">Name</label>\\n        <input\\n          type=\\\"text\\\"\\n          name=\\\"name\\\"\\n          formControlName=\\\"name\\\"\\n          id=\\\"name\\\"\\n          class=\\\"form-input\\\"\\n          placeholder=\\\"Name\\\"\\n        />\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"\\n            name.invalid && (name.dirty || name.touched) && name.errors.required\\n          \\\"\\n        >\\n          A name is required\\n        </p>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"\\n            name.invalid &&\\n            (name.dirty || name.touched) &&\\n            name.errors.minlength\\n          \\\"\\n        >\\n          The name cannot be shorter than 3 characters\\n        </p>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"\\n            name.invalid &&\\n            (name.dirty || name.touched) &&\\n            name.errors.maxlength\\n          \\\"\\n        >\\n          The name cannot be longer than 30 characters\\n        </p>\\n      </div>\\n\\n      <div\\n        class=\\\"form-group\\\"\\n        [ngClass]=\\\"{\\n          'has-error':\\n            description.invalid && (description.dirty || description.touched)\\n        }\\\"\\n      >\\n        <label for=\\\"description\\\" class=\\\"form-label\\\">Description</label>\\n        <textarea\\n          formControlName=\\\"description\\\"\\n          name=\\\"description\\\"\\n          id=\\\"description\\\"\\n          rows=\\\"5\\\"\\n          class=\\\"form-input\\\"\\n          placeholder=\\\"Description\\\"\\n        ></textarea>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"\\n            description.invalid &&\\n            (description.dirty || description.touched) &&\\n            description.errors.required\\n          \\\"\\n        >\\n          A description is required\\n        </p>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"\\n            description.invalid &&\\n            (description.dirty || description.touched) &&\\n            description.errors.minlength\\n          \\\"\\n        >\\n          The description cannot be shorter than 3 characters\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { Campaign } from 'src/app/campaign';\n\n@Component({\n  selector: 'dd-campaign-form',\n  templateUrl: './campaign-form.component.html',\n  styleUrls: ['./campaign-form.component.css'],\n})\nexport class CampaignFormComponent implements OnInit {\n  @Input()\n  public formGroup: FormGroup;\n\n  @Input()\n  public campaign: Campaign;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.formGroup.addControl(\n      'name',\n      new FormControl(this.campaign ? this.campaign.name : null, [\n        Validators.required,\n        Validators.maxLength(30),\n        Validators.minLength(2),\n      ])\n    );\n\n    this.formGroup.addControl(\n      'description',\n      new FormControl(this.campaign ? this.campaign.description : null, [\n        Validators.required,\n        Validators.minLength(3),\n      ])\n    );\n\n    this.formGroup.addControl(\n      'imageId',\n      new FormControl(\n        this.campaign.imageId === '' || !this.campaign\n          ? null\n          : this.campaign.imageId,\n        [Validators.required]\n      )\n    );\n  }\n\n  public get name() {\n    return this.formGroup.get('name');\n  }\n\n  public get description() {\n    return this.formGroup.get('description');\n  }\n}\n","module.exports = \"<dd-modal #invites size=\\\"large\\\">\\n  <div modal-header><h4>Manage Invites</h4></div>\\n  <div modal-body><dd-invite-manager></dd-invite-manager></div>\\n</dd-modal>\\n\\n<div class=\\\"container grid-xl\\\" *ngIf=\\\"campaign\\\">\\n  <!-- Active Session Card -->\\n  <div class=\\\"card p-2\\\">\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column\\\">\\n        <span class=\\\"text-large text-bold\\\"\\n          >There is currently an active session!</span\\n        >\\n      </div>\\n      <div class=\\\"column col-auto col-ml-auto\\\">\\n        <button class=\\\"btn btn-primary\\\">\\n          Join Session <i class=\\\"icon icon-arrow-right\\\"></i>\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <!-- Header -->\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column col-auto\\\">\\n      <h1>{{ campaign.name }}</h1>\\n    </div>\\n    <div class=\\\"column col-auto col-ml-auto\\\">\\n      <div class=\\\"dropdown dropdown-right\\\">\\n        <button class=\\\"btn btn-link dropdown-toggle\\\">\\n          Menu <i class=\\\"icon icon-caret\\\"></i>\\n        </button>\\n\\n        <ul class=\\\"menu\\\">\\n          <li class=\\\"menu-item\\\">\\n            <a [routerLink]=\\\"['..', 'entities', 'selecttype']\\\">\\n              Create Entity\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"columns\\\">\\n    <!-- Description -->\\n    <div class=\\\"column col-9 col-xl-8 col-md-12\\\">\\n      <p>{{ campaign.description }}</p>\\n    </div>\\n\\n    <!-- Sidebar -->\\n    <div class=\\\"column col-3 col-md-12 col-xl-4 col-ml-auto\\\">\\n      <!-- Members Listing -->\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column\\\"><h5>Members</h5></div>\\n            <div class=\\\"column col-auto col-ml-auto\\\">\\n              <button class=\\\"btn btn-sm\\\" (click)=\\\"invites.open()\\\">\\n                <i class=\\\"icon icon-plus\\\"></i> Invite Members\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n          <div\\n            class=\\\"tile tile-centered mb-2\\\"\\n            *ngFor=\\\"let u of campaign.members\\\"\\n          >\\n            <div class=\\\"tile-icon\\\">\\n              <figure class=\\\"avatar\\\"><img [src]=\\\"u.user.pictureURL\\\" /></figure>\\n            </div>\\n            <div class=\\\"tile-content\\\">\\n              <div class=\\\"tile-title\\\">{{ u.user.username }}</div>\\n              <div class=\\\"d-flex\\\">\\n                <span\\n                  class=\\\"chip hoverable-chip\\\"\\n                  (click)=\\\"selectEntity(e)\\\"\\n                  *ngFor=\\\"let e of userEntities(u.user.id)\\\"\\n                >\\n                  <img\\n                    src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{\\n                      e.imageId\\n                    }}.png\\\"\\n                    class=\\\"avatar avatar-sm\\\"\\n                  />\\n                  {{ e.name }}\\n                </span>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".d-flex > .chip {\\n  flex-shrink: 0;\\n  flex-grow: 0; }\\n\\n.d-flex {\\n  flex-wrap: wrap; }\\n\\n.hoverable-chip {\\n  transition: -webkit-transform 0.25s;\\n  transition: transform 0.25s;\\n  transition: transform 0.25s, -webkit-transform 0.25s; }\\n\\n.hoverable-chip:hover {\\n  -webkit-transform: scale(1.05);\\n          transform: scale(1.05);\\n  cursor: pointer;\\n  background-color: #5755d9;\\n  color: #fff; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CampaignService } from 'src/app/campaign.service';\nimport { Entity } from 'src/app/entity';\nimport { ModalComponent } from 'src/app/modal/modal.component';\n\n@Component({\n  selector: 'dd-campaign-landing',\n  templateUrl: './campaign-landing.component.html',\n  styleUrls: ['./campaign-landing.component.scss'],\n})\nexport class CampaignLandingComponent implements OnInit {\n  @ViewChild('invites')\n  public invites: ModalComponent<boolean>;\n\n  constructor(\n    private campaignService: CampaignService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {}\n\n  public userEntities(id: string) {\n    return this.campaign.entities.filter((e) => e.user.id === id);\n  }\n\n  public selectEntity(entity: Entity) {\n    this.router.navigate(['..', 'entities', entity.id], {\n      relativeTo: this.route,\n    });\n  }\n\n  public get campaign() {\n    return this.campaignService.campaign;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container grid-xl\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column\\\"><h3>Campaigns</h3></div>\\n    <div class=\\\"column col-auto col-ml-auto\\\">\\n      <button class=\\\"btn btn-sm\\\" (click)=\\\"createCampaign()\\\">\\n        <i class=\\\"icon icon-plus\\\"></i> Create Campaign\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"loading loading-lg\\\" *ngIf=\\\"loading\\\"></div>\\n\\n  <!-- Campaign Empty State -->\\n  <div class=\\\"empty\\\" *ngIf=\\\"campaigns && campaigns.length === 0\\\">\\n    <div class=\\\"empty-icon\\\"><i class=\\\"icon icon-search icon-4x\\\"></i></div>\\n    <p class=\\\"empty-title h5\\\">There are no campaigns here</p>\\n    <p class=\\\"empty-subtitle\\\">\\n      Click the button to create your own, or ask your DM for an invite\\n    </p>\\n    <div class=\\\"empty-action\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"createCampaign()\\\">\\n        Create Campaign\\n      </button>\\n    </div>\\n  </div>\\n\\n  <!-- Display Campaings -->\\n  <div *ngFor=\\\"let c of campaigns\\\">\\n    <div class=\\\"card hoverable p-2 mb-2\\\" (click)=\\\"selectCampaign(c)\\\">\\n      <div class=\\\"columns\\\">\\n        <div class=\\\"column col-auto\\\" *ngIf=\\\"c.imageId\\\">\\n          <figure class=\\\"avatar avatar-lg\\\">\\n            <img\\n              src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{\\n                c.imageId\\n              }}.png\\\"\\n            />\\n          </figure>\\n        </div>\\n        <div class=\\\"column\\\">\\n          <div class=\\\"columns\\\">\\n            <div class=\\\"column\\\">\\n              <h4 class=\\\"mb-1\\\">{{ c.name }}</h4>\\n            </div>\\n            <div class=\\\"column col-auto col-ml-auto\\\">\\n              <span class=\\\"text-gray text-italic\\\"> Example Text </span>\\n            </div>\\n          </div>\\n          <span class=\\\"text-gray\\\">{{ c.description | truncate: 150 }}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Campaign } from 'src/app/campaign';\nimport { CampaignService, ICampaign } from 'src/app/campaign.service';\n\n@Component({\n  selector: 'dd-campaign-list',\n  templateUrl: './campaign-list.component.html',\n  styleUrls: ['./campaign-list.component.css'],\n})\nexport class CampaignListComponent implements OnInit {\n  public loading = false;\n  public creating = false;\n  public campaigns: ICampaign[] = null;\n\n  constructor(\n    private campaignService: CampaignService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.loadCampaigns();\n  }\n\n  public async createCampaign() {\n    this.router.navigate(['campaigns', 'create']);\n  }\n\n  public selectCampaign(campaign: Campaign) {\n    this.campaignService.setSelection(campaign.id);\n    this.router.navigate(['campaigns', campaign.id]);\n  }\n\n  private async loadCampaigns() {\n    this.loading = true;\n    try {\n      const campaigns = await this.campaignService.getCampaigns();\n      this.campaigns = campaigns;\n    } catch (err) {\n      console.log('ERR', err);\n    }\n\n    this.loading = false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container grid-xl\\\" *ngIf=\\\"campaign || !editing\\\">\\n  <!-- Header -->\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column\\\"><h2>Settings</h2></div>\\n    <div class=\\\"column col-auto col-ml-auto\\\">\\n      <button\\n        class=\\\"btn\\\"\\n        [disabled]=\\\"formGroup.invalid\\\"\\n        (click)=\\\"save()\\\"\\n        [ngClass]=\\\"{ loading: saving }\\\"\\n      >\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n\\n  <h3>General Settings</h3>\\n  <dd-campaign-form\\n    [campaign]=\\\"campaign\\\"\\n    [formGroup]=\\\"formGroup\\\"\\n  ></dd-campaign-form>\\n\\n  <!-- Experience Table -->\\n  <div class=\\\"columns mt-2\\\">\\n    <div class=\\\"column\\\"><h3 class=\\\"mt-2 mb-0\\\">Experience Table</h3></div>\\n    <div class=\\\"column col-auto col-ml-auto\\\">\\n      <button\\n        class=\\\"btn btn-sm\\\"\\n        *ngIf=\\\"!expandXPTable\\\"\\n        (click)=\\\"expandXPTable = !expandXPTable\\\"\\n      >\\n        Expand <i class=\\\"icon icon-arrow-down\\\"></i>\\n      </button>\\n      <button\\n        class=\\\"btn btn-sm\\\"\\n        *ngIf=\\\"expandXPTable\\\"\\n        (click)=\\\"expandXPTable = !expandXPTable\\\"\\n      >\\n        Collapse <i class=\\\"icon icon-arrow-up\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n  <span class=\\\"text-gray\\\" *ngIf=\\\"expandXPTable\\\"\\n    >This is the experience table. This will determine entities' levels based on\\n    the amount of XP they have. For example, if level 2 was set to 30 XP, an\\n    entity would be level 2 when they reach 30 or above XP.</span\\n  >\\n  <dd-experience-table-editor\\n    [campaign]=\\\"campaign\\\"\\n    [formGroup]=\\\"formGroup\\\"\\n    *ngIf=\\\"expandXPTable\\\"\\n  ></dd-experience-table-editor>\\n\\n  <!-- Entity Types -->\\n  <div class=\\\"columns mt-2\\\" *ngIf=\\\"editing\\\">\\n    <div class=\\\"column\\\"><h3>Entity Types</h3></div>\\n    <div class=\\\"column col-auto\\\">\\n      <button class=\\\"btn btn-sm\\\" (click)=\\\"createEntityPreset()\\\">\\n        <i class=\\\"icon icon-plus\\\"></i> Create Entity Preset\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"empty\\\" *ngIf=\\\"editing && campaign.entityPresets.length === 0\\\">\\n    <div class=\\\"empty-icon\\\"><i class=\\\"icon icon-search icon-4x\\\"></i></div>\\n    <p class=\\\"empty-title h5\\\">There are no entity presets :(</p>\\n    <p class=\\\"empty-subtitle\\\">Click the button to create one</p>\\n    <div class=\\\"empty-action\\\">\\n      <button class=\\\"btn btn-primary\\\" (click)=\\\"createEntityPreset()\\\">\\n        Create Preset\\n      </button>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"editing\\\">\\n    <div\\n      class=\\\"card p-2 mb-2 hoverable\\\"\\n      *ngFor=\\\"let ep of campaign.entityPresets\\\"\\n      (click)=\\\"selectEntityPreset(ep)\\\"\\n    >\\n      <div class=\\\"columns\\\">\\n        <div class=\\\"column col-auto\\\" *ngIf=\\\"ep.imageId\\\">\\n          <figure class=\\\"avatar avatar-lg\\\">\\n            <img\\n              src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{\\n                ep.imageId\\n              }}.png\\\"\\n            />\\n          </figure>\\n        </div>\\n        <div class=\\\"column\\\">\\n          <h4 class=\\\"mb-1\\\">{{ ep.name }}</h4>\\n          <span class=\\\"text-gray\\\">{{ ep.description | truncate: 120 }}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { CampaignService, ICampaign } from 'src/app/campaign.service';\nimport { IEntityPreset } from 'src/app/entity.service';\nimport { FormGroup } from '@angular/forms';\nimport { LoginService } from 'src/app/login.service';\n\n@Component({\n  selector: 'dd-campaign-settings',\n  templateUrl: './campaign-settings.component.html',\n  styleUrls: ['./campaign-settings.component.css'],\n})\nexport class CampaignSettingsComponent implements OnInit {\n  public saving = false;\n\n  public expandXPTable = false;\n\n  public formGroup: FormGroup;\n\n  constructor(\n    private campaignService: CampaignService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private login: LoginService\n  ) {}\n\n  ngOnInit() {\n    this.formGroup = new FormGroup({});\n    this.expandXPTable = !this.editing;\n    if (\n      this.campaign.experienceTable === undefined ||\n      this.campaign.experienceTable === null\n    ) {\n      this.campaign.experienceTable = [];\n    }\n  }\n\n  public selectEntityPreset(preset: IEntityPreset) {\n    this.router.navigate(['../', 'entities', preset.id, 'edit'], {\n      relativeTo: this.route,\n    });\n  }\n\n  public async createEntityPreset() {\n    this.router.navigate(['..', 'entities', 'create'], {\n      relativeTo: this.route,\n    });\n  }\n\n  public async save() {\n    this.saving = true;\n\n    if (this.editing) {\n      try {\n        const v = this.formGroup.value;\n\n        await this.campaignService.updateCampaign({\n          name: v.name,\n          description: v.description,\n          imageId: v.imageId,\n          experienceTable: v.experienceTable,\n          userId: this.login.id,\n          id: this.campaign.id,\n        });\n      } catch (err) {\n        console.log('SAVE ERR', err);\n      }\n    } else {\n      const v = this.formGroup.value;\n\n      try {\n        const c = await this.campaignService.createCampaign({\n          name: v.name,\n          description: v.description,\n          imageId: v.imageId,\n          experienceTable: v.experienceTable,\n          userId: this.login.id,\n          id: '',\n        });\n\n        this.router.navigate(['campaign', 'manage', c.id, 'settings']);\n\n        console.log('CREATE', c);\n      } catch (err) {\n        console.log('CREATE ERR', err, err.stack);\n      }\n    }\n\n    this.saving = false;\n  }\n\n  public get campaign(): ICampaign {\n    if (this.editing) {\n      return this.campaignService.campaign;\n    } else {\n      return {\n        id: '',\n        name: '',\n        description: '',\n        imageId: '',\n        userId: '',\n        experienceTable: [],\n      };\n    }\n  }\n\n  public get editing() {\n    return this.route.snapshot.data.editing;\n  }\n}\n","module.exports = \"\"","module.exports = \"<dd-entity-attribute-row-editor></dd-entity-attribute-row-editor>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dd-entity-types',\n  templateUrl: './entity-types.component.html',\n  styleUrls: ['./entity-types.component.css']\n})\nexport class EntityTypesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"form-horizontal\\\" [formGroup]=\\\"formGroup\\\">\\n  <div class=\\\"form-group\\\">\\n    <div class=\\\"col-1 col-lg-2 col-sm-12\\\">\\n      <label class=\\\"form-label text-bold\\\">Level 1</label>\\n    </div>\\n    <div class=\\\"col-11 col-lg-10 col-sm-12\\\">\\n      <input class=\\\"form-input\\\" type=\\\"number\\\" value=\\\"0\\\" disabled />\\n    </div>\\n  </div>\\n  <div\\n    class=\\\"form-group\\\"\\n    *ngFor=\\\"let c of controls; let i = index\\\"\\n    formArrayName=\\\"experienceTable\\\"\\n    [ngClass]=\\\"{\\n      'has-error':\\n        hasOrderError(i) ||\\n        (controls[i].invalid && (controls[i].dirty || controls[i].touched))\\n    }\\\"\\n  >\\n    <div class=\\\"col-1 col-lg-2 col-sm-12\\\">\\n      <label class=\\\"form-label text-bold\\\">Level {{ i + 2 }}</label>\\n    </div>\\n    <div class=\\\"col-11 col-lg-10 col-sm-12\\\">\\n      <input\\n        class=\\\"form-input\\\"\\n        type=\\\"number\\\"\\n        placeholder=\\\"XP\\\"\\n        [formControlName]=\\\"i\\\"\\n      />\\n      <p class=\\\"form-input-hint\\\" *ngIf=\\\"hasOrderError(i)\\\">\\n        XP value must be more than the previous level\\n      </p>\\n      <p\\n        class=\\\"form-input-hint\\\"\\n        *ngIf=\\\"\\n          controls[i].invalid &&\\n          (controls[i].dirty || controls[i].touched) &&\\n          controls[i].errors.required\\n        \\\"\\n      >\\n        XP value is required\\n      </p>\\n      <p\\n        class=\\\"form-input-hint\\\"\\n        *ngIf=\\\"\\n          controls[i].invalid &&\\n          (controls[i].dirty || controls[i].touched) &&\\n          controls[i].errors.min\\n        \\\"\\n      >\\n        XP value must be more than 0\\n      </p>\\n      <p\\n        class=\\\"form-input-hint\\\"\\n        *ngIf=\\\"\\n          controls[i].invalid &&\\n          (controls[i].dirty || controls[i].touched) &&\\n          controls[i].errors.max\\n        \\\"\\n      >\\n        The max xp value is 2,147,483,647\\n      </p>\\n    </div>\\n  </div>\\n</div>\\n<button class=\\\"btn btn-sm\\\" (click)=\\\"addRow()\\\">\\n  <i class=\\\"icon icon-plus\\\"></i> Add Level\\n</button>\\n<button\\n  class=\\\"btn btn-sm btn-error ml-2\\\"\\n  (click)=\\\"removeRow()\\\"\\n  [disabled]=\\\"controls.length === 0\\\"\\n>\\n  <i class=\\\"icon icon-cross\\\"></i> Remove Level\\n</button>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport {\n  FormGroup,\n  FormArray,\n  FormControl,\n  ValidatorFn,\n  ValidationErrors,\n  Validators,\n  AbstractControl,\n} from '@angular/forms';\nimport { numberValidator } from 'src/app/entity/dynamic-attribute-form/dynamic-attribute-form.component';\nimport { Campaign } from 'src/app/campaign';\n\n@Component({\n  selector: 'dd-experience-table-editor',\n  templateUrl: './experience-table-editor.component.html',\n  styleUrls: ['./experience-table-editor.component.css'],\n})\nexport class ExperienceTableEditorComponent implements OnInit {\n  @Input()\n  public campaign: Campaign;\n\n  @Input()\n  public formGroup: FormGroup;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (!this.campaign) {\n      throw new Error('The param campaign is required!');\n    }\n\n    this.formGroup.addControl(\n      'experienceTable',\n      new FormArray(\n        this.campaign.experienceTable.map((xp) => this.createRow(xp)),\n        xpTest\n      )\n    );\n  }\n\n  private createRow(xp?: number): AbstractControl {\n    return new FormControl(xp ? xp : 0, [\n      Validators.required,\n      Validators.min(0),\n      numberValidator,\n    ]);\n  }\n\n  public addRow() {\n    this.formArray.push(this.createRow());\n  }\n\n  public removeRow() {\n    this.formArray.removeAt(this.controls.length - 1);\n  }\n\n  public hasOrderError(i: number) {\n    return this.formArray.errors && this.formArray.errors[`order-${i}`];\n  }\n\n  public get formArray() {\n    return this.formGroup.get('experienceTable') as FormArray;\n  }\n\n  public get controls() {\n    return this.formArray.controls;\n  }\n}\n\nexport const xpTest: ValidatorFn = (\n  control: FormArray\n): ValidationErrors | null => {\n  let lastXP = 0;\n  const errObj = {};\n\n  for (let i = 0; i < control.value.length; i++) {\n    if (!control.value[i]) {\n      continue;\n    }\n\n    if (control.value[i] > lastXP) {\n      lastXP = control.value[i];\n    } else {\n      errObj[`order-${i}`] = true;\n    }\n  }\n\n  if (Object.keys(errObj).length > 0) {\n    return errObj;\n  } else {\n    return null;\n  }\n};\n","module.exports = \"\"","module.exports = \"<div class=\\\"loading\\\" *ngIf=\\\"loading\\\"></div>\\n<div *ngIf=\\\"invites\\\">\\n  <!-- Empty State -->\\n  <div class=\\\"empty\\\" *ngIf=\\\"invites.length === 0\\\">\\n    <div class=\\\"empty-icon\\\"><i class=\\\"icon icon-people icon-4x\\\"></i></div>\\n    <p class=\\\"empty-title h5\\\">There are no invites</p>\\n    <p class=\\\"empty-subtitle\\\">Click the button below to create one</p>\\n    <div class=\\\"empty-action\\\">\\n      <button\\n        class=\\\"btn btn-primary\\\"\\n        [ngClass]=\\\"{ loading: creatingInvite }\\\"\\n        (click)=\\\"createInvite()\\\"\\n      >\\n        Create invite\\n      </button>\\n    </div>\\n  </div>\\n\\n  <button\\n    class=\\\"btn btn-sm\\\"\\n    (click)=\\\"createInvite()\\\"\\n    [ngClass]=\\\"{ loading: creatingInvite }\\\"\\n  >\\n    <i class=\\\"icon icon-plus\\\"></i> Create Invite\\n  </button>\\n  <!-- Invites List -->\\n  <table class=\\\"table\\\" *ngIf=\\\"invites.length > 0\\\">\\n    <thead>\\n      <tr>\\n        <th>Link</th>\\n        <th>Name</th>\\n        <th>Status</th>\\n        <th>User</th>\\n        <th>Created On</th>\\n        <th></th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let i of invites\\\">\\n        <td><a [href]=\\\"getInviteLink(i.id)\\\">Link</a></td>\\n        <td>{{ i.name }}</td>\\n        <td [ngSwitch]=\\\"i.status\\\">\\n          <span *ngSwitchCase=\\\"0\\\">Pending</span>\\n          <span *ngSwitchCase=\\\"1\\\">Revoked</span>\\n          <span *ngSwitchCase=\\\"2\\\">Accepted</span>\\n          <span *ngSwitchCase=\\\"3\\\">Declined</span>\\n        </td>\\n        <td>\\n          <div *ngIf=\\\"i.user\\\">\\n            <figure class=\\\"avatar avatar-xs\\\">\\n              <img [src]=\\\"i.user.pictureURL\\\" alt=\\\"Avatar\\\" />\\n            </figure>\\n            {{ i.user.username }}\\n          </div>\\n          <span *ngIf=\\\"!i.user\\\">N/A</span>\\n        </td>\\n        <td>{{ i.createdAt | date }}</td>\\n        <td>\\n          <button\\n            class=\\\"btn btn-link btn-sm\\\"\\n            *ngIf=\\\"i.status === 0\\\"\\n            (click)=\\\"revokeInvite(i)\\\"\\n          >\\n            <i class=\\\"icon icon-cross\\\"></i>Revoke\\n          </button>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {\n  ICampaignInvite,\n  CampaignService,\n  CampaignInviteStatus,\n} from 'src/app/campaign.service';\nimport { Chance } from 'chance';\n\n@Component({\n  selector: 'dd-invite-manager',\n  templateUrl: './invite-manager.component.html',\n  styleUrls: ['./invite-manager.component.css'],\n})\nexport class InviteManagerComponent implements OnInit {\n  public loading = false;\n  public creatingInvite = false;\n\n  public invites: ICampaignInvite[];\n\n  constructor(private campaignService: CampaignService) {}\n\n  ngOnInit() {\n    this.loadInvites();\n  }\n\n  public async createInvite() {\n    this.creatingInvite = true;\n\n    const c = new Chance();\n\n    try {\n      const invite = await this.campaignService.createInvite(\n        `${c.state({ full: true, territories: true })} ${c.animal()}`\n      );\n      this.invites.push(invite);\n    } catch (err) {\n      console.log('INVITE ERRR', err);\n    }\n\n    this.creatingInvite = false;\n  }\n\n  public async revokeInvite(invite: ICampaignInvite) {\n    try {\n      const toUpdate: ICampaignInvite = {\n        ...invite,\n        status: CampaignInviteStatus.REVOKED,\n      };\n\n      await this.campaignService.updateInvite(toUpdate);\n\n      invite.status = toUpdate.status;\n    } catch (err) {\n      console.log('REVOKE ERR', err);\n    }\n  }\n\n  public getInviteLink(id: string): string {\n    return `${location.protocol}//${location.host}/invite/${id}`;\n  }\n\n  private async loadInvites() {\n    this.loading = true;\n    try {\n      const invites = await this.campaignService.getInvites();\n      this.invites = invites;\n    } catch (err) {\n      console.log('LOAD ERR', err);\n    }\n    this.loading = false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<dd-modal size=\\\"small\\\" #modal>\\n  <div modal-header>\\n    <h5 class=\\\"modal-title h5\\\">{{ title }}</h5>\\n  </div>\\n  <div modal-body>{{ question }}</div>\\n  <div modal-footer>\\n    <button class=\\\"btn mr-2\\\" (click)=\\\"confirm()\\\">Yes</button>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"deny()\\\">No</button>\\n  </div>\\n</dd-modal>\\n\"","import { Component, OnInit, ViewChild, Input } from '@angular/core';\nimport { ModalComponent } from '../modal/modal.component';\n\n@Component({\n  selector: 'dd-confirmation-modal',\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.css'],\n})\nexport class ConfirmationModalComponent implements OnInit {\n  @ViewChild('modal')\n  public modal: ModalComponent<boolean>;\n\n  public title: string;\n\n  public question: string;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public async close(): Promise<boolean> {\n    return this.modal.close(false);\n  }\n\n  public confirm() {\n    return this.modal.close(true);\n  }\n\n  public deny() {\n    return this.modal.close(false);\n  }\n\n  public getConfirmation(\n    question: string = 'Are you sure?',\n    title: string = 'Confirm'\n  ): Promise<boolean> {\n    this.title = title;\n    this.question = question;\n\n    return this.modal.open();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Entity, AttributeClass } from './entity';\nimport { AttributeType } from './attributes';\nimport { HttpClient } from '@angular/common/http';\nimport { IUser } from './user.service';\nimport { ICampaign } from './campaign.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EntityService {\n  constructor(private http: HttpClient) {}\n\n  public async updateEntityPreset(entityPreset: IEntityPreset): Promise<void> {\n    return this.http\n      .put<void>(\n        `${environment.apiURL}/entitypresets/${entityPreset.id}`,\n        entityPreset\n      )\n      .toPromise();\n  }\n\n  // Creates a blank entity preset and returns the ID\n  public async createEntityPreset(\n    preset: IEntityPreset\n  ): Promise<IEntityPreset> {\n    return this.http\n      .post<IEntityPreset>(`${environment.apiURL}/entitypresets`, preset)\n      .toPromise();\n  }\n\n  public async getEntityPreset(id: string): Promise<IEntityPreset> {\n    return this.http\n      .get<IEntityPreset>(`${environment.apiURL}/entitypresets/${id}`)\n      .toPromise();\n  }\n\n  public async deleteEntityPreset(\n    campaignId: string,\n    entityPresetId: string\n  ): Promise<void> {\n    await simulateDelay(250);\n  }\n\n  public async getEntity(id: string): Promise<IEntity> {\n    return this.http\n      .get<IEntity>(`${environment.apiURL}/entities/${id}`)\n      .toPromise();\n  }\n\n  public async createEntity(entity: IEntity): Promise<IEntity> {\n    return this.http\n      .post<IEntity>(`${environment.apiURL}/entities`, entity)\n      .toPromise();\n  }\n\n  public async updateEntity(entity: IEntity): Promise<void> {\n    return this.http\n      .put<void>(`${environment.apiURL}/entities/${entity.id}`, entity)\n      .toPromise();\n  }\n\n  public async deleteEntity(campaignId: string, entity: Entity): Promise<void> {\n    await simulateDelay(250);\n  }\n}\n\nexport interface IEntityPreset {\n  id: string;\n  name: string;\n  description: string;\n  userId: string;\n  user?: IUser;\n  imageId: string;\n  playerCreatable: boolean;\n  attributes?: IEntityAttribute[];\n  campaignId: string;\n  campaign?: ICampaign;\n}\n\nexport interface IEntityAttribute {\n  id: string;\n  name: string;\n  description: string;\n  imageId?: string;\n  defaultValue?: string;\n  type: AttributeType;\n  options?: string[];\n  class: AttributeClass;\n  required: boolean;\n  entityPresetId: string;\n  preset?: IEntityPreset;\n  max?: number;\n  min?: number;\n}\n\nexport interface IEntity {\n  id?: string;\n  name: string;\n  description: string;\n  imageId?: string;\n  userId: string;\n  user?: IUser;\n  campaignId: string;\n  campaign?: ICampaign;\n  attributes: IAttribute[];\n  xp: number;\n  entityPresetId: string;\n  preset?: IEntityPreset;\n}\n\nexport interface IAttribute {\n  name: string;\n  type: AttributeType;\n  data: string;\n}\n\n// Used in mock apis, will be removed\nconst simulateDelay = (ms: number): Promise<void> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n};\n","import { User } from './user';\nimport { Inventory } from './inventory';\nimport { AttributeType, Attribute } from './attributes';\n\nexport interface EntityAttribute {\n  name: string;\n  description?: string;\n  imageId?: string;\n  defaultValue?: string;\n  type: AttributeType;\n  options?: string[];\n  class: AttributeClass;\n\n  required: boolean;\n  max?: number;\n  min?: number;\n}\n\nexport enum AttributeClass {\n  MAJOR,\n  NORMAL,\n  MINOR,\n  UNIMPORTANT,\n}\n\nexport interface EntityPreset {\n  id: string;\n  user: User;\n  name: string;\n  description: string;\n  imageId?: string;\n  attributes: EntityAttribute[];\n  inventory: Inventory;\n  health: HealthPreset;\n  playerCreatable: boolean;\n}\n\nexport interface HealthPreset {\n  mode: HealthMode;\n  max?: number;\n}\n\nexport enum HealthMode {\n  NORMAL,\n  MULTI_BAR,\n}\n\nexport interface Health {\n  mode: HealthMode;\n\n  normal?: {\n    max: number;\n    current: number;\n    temp: number;\n  };\n\n  multiBar?: {\n    bars: number[];\n    current: number;\n  };\n}\n\nexport interface Entity {\n  id: string;\n  user: User;\n  name: string;\n  description: string;\n  imageId?: string;\n  attributes: Attribute[];\n  xp: number;\n  inventory: Inventory;\n  health: Health;\n  preset?: EntityPreset;\n}\n","module.exports = \"\"","module.exports = \"<div [formGroup]=\\\"formGroup\\\">\\n  <div class=\\\"form-horizontal\\\">\\n    <div\\n      class=\\\"form-group col-12\\\"\\n      *ngFor=\\\"let att of attributes\\\"\\n      [ngClass]=\\\"{\\n        'has-error': control(att.name).invalid && (control(att.name).dirty || control(att.name).touched),\\n        'has-success': control(att.name).valid && (control(att.name).dirty || control(att.name).touched)\\n      }\\\"\\n    >\\n      <div class=\\\"col-1 col-lg-2 col-sm-12\\\">\\n        <label class=\\\"form-label\\\"\\n          >{{ att.name }} <span *ngIf=\\\"att.required\\\" class=\\\"text-primary text-large text-bold\\\">*</span></label\\n        >\\n      </div>\\n      <div class=\\\"col-11 col-lg-10 col-sm-12\\\">\\n        <div [ngClass]=\\\"{ 'has-icon-left': att.imageId }\\\" [ngSwitch]=\\\"att.type\\\">\\n          <!-- Text Input -->\\n          <input\\n            type=\\\"text\\\"\\n            name=\\\"attr\\\"\\n            class=\\\"form-input\\\"\\n            [placeholder]=\\\"att.name\\\"\\n            [formControlName]=\\\"att.name\\\"\\n            *ngSwitchCase=\\\"0\\\"\\n          />\\n\\n          <!-- Number Input -->\\n          <input\\n            type=\\\"number\\\"\\n            name=\\\"attr\\\"\\n            class=\\\"form-input\\\"\\n            [placeholder]=\\\"att.name\\\"\\n            [formControlName]=\\\"att.name\\\"\\n            *ngSwitchCase=\\\"1\\\"\\n          />\\n\\n          <!-- Enum input -->\\n          <select class=\\\"form-input\\\" name=\\\"attr\\\" [formControlName]=\\\"att.name\\\" *ngSwitchCase=\\\"2\\\">\\n            <option *ngFor=\\\"let o of att.options\\\" [value]=\\\"o\\\">{{ o }}</option>\\n          </select>\\n\\n          <figure class=\\\"form-icon avatar\\\" *ngIf=\\\"att.imageId\\\">\\n            <img src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{ att.imageId }}.png\\\" />\\n          </figure>\\n        </div>\\n        <p class=\\\"form-input-hint mb-0\\\">{{ att.description }}</p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"\\n            control(att.name).invalid &&\\n            (control(att.name).dirty || control(att.name).touched) &&\\n            control(att.name).errors.required\\n          \\\"\\n        >\\n          {{ att.name }} is required\\n        </p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"\\n            control(att.name).invalid &&\\n            (control(att.name).dirty || control(att.name).touched) &&\\n            control(att.name).errors.min\\n          \\\"\\n        >\\n          {{ att.name }} can't be lower than {{ att.min }}\\n        </p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"\\n            control(att.name).invalid &&\\n            (control(att.name).dirty || control(att.name).touched) &&\\n            control(att.name).errors.max\\n          \\\"\\n        >\\n          {{ att.name }} can't be higher than {{ att.max }}\\n        </p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"\\n            control(att.name).invalid &&\\n            (control(att.name).dirty || control(att.name).touched) &&\\n            control(att.name).errors.minlength\\n          \\\"\\n        >\\n          {{ att.name }} cannot have less than {{ att.min }} characters\\n        </p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"\\n            control(att.name).invalid &&\\n            (control(att.name).dirty || control(att.name).touched) &&\\n            control(att.name).errors.maxlength\\n          \\\"\\n        >\\n          {{ att.name }} cannot have more than {{ att.max }} characters\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  Validators,\n  ValidatorFn,\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport { EntityAttribute } from 'src/app/entity';\nimport { AttributeType, Attribute } from 'src/app/attributes';\n\n@Component({\n  selector: 'dd-dynamic-attribute-form',\n  templateUrl: './dynamic-attribute-form.component.html',\n  styleUrls: ['./dynamic-attribute-form.component.css'],\n})\nexport class DynamicAttributeFormComponent implements OnInit {\n  @Input()\n  public attributes: EntityAttribute[];\n\n  @Input()\n  public formGroup: FormGroup;\n\n  constructor() {}\n\n  ngOnInit() {\n    for (const attr of this.attributes) {\n      const validators: ValidatorFn[] = [];\n\n      if (attr.type === AttributeType.STRING) {\n        if (attr.min !== undefined && attr.min !== null) {\n          validators.push(Validators.minLength(attr.min));\n        }\n\n        if (attr.max !== undefined && attr.max !== null) {\n          validators.push(Validators.maxLength(attr.max));\n        }\n      } else if (attr.type === AttributeType.NUMBER) {\n        if (attr.min !== undefined && attr.min !== null) {\n          validators.push(Validators.min(attr.min));\n        }\n\n        if (attr.max !== undefined && attr.max !== null) {\n          validators.push(Validators.max(attr.max));\n        }\n\n        validators.push(numberValidator);\n      }\n\n      if (attr.required) {\n        validators.push(Validators.required);\n      }\n\n      if (attr.type === AttributeType.ENUM && attr.defaultValue === undefined) {\n        this.formGroup.addControl(\n          attr.name,\n          new FormControl(attr.options[0], validators)\n        );\n      } else {\n        this.formGroup.addControl(\n          attr.name,\n          new FormControl(attr.defaultValue, validators)\n        );\n      }\n    }\n\n    // this.formGroup.valueChanges.subscribe((v) => {\n    //   console.log(v, this.formGroup);\n    // });\n  }\n\n  public constructAttributes(): Attribute[] {\n    const attributes: Attribute[] = [];\n\n    for (const attr of this.attributes) {\n      attributes.push({\n        name: attr.name,\n        type: attr.type,\n        data: this.formGroup.get(attr.name).value,\n      });\n    }\n\n    return attributes;\n  }\n\n  public control(name: string): AbstractControl {\n    return this.formGroup.get(name);\n  }\n}\n\nexport const numberValidator: ValidatorFn = (\n  control: AbstractControl\n): ValidationErrors | null => {\n  if (\n    control.value !== null &&\n    control.value !== undefined &&\n    control.value !== ''\n  ) {\n    try {\n      parseFloat(control.value);\n    } catch (err) {\n      return {\n        number: true,\n      };\n    }\n  }\n};\n","module.exports = \"\"","module.exports = \"<div [formGroup]=\\\"formGroup\\\" class=\\\"mb-2\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column\\\">\\n      <h3 class=\\\"mb-0\\\">{{ formGroup.get('name').value }}</h3>\\n    </div>\\n    <div class=\\\"column col-auto col-ml-auto\\\">\\n      <button class=\\\"btn btn-error btn-sm\\\" (click)=\\\"remove.emit()\\\">\\n        Remove {{ formGroup.get('name').value }} <i class=\\\"icon icon-cross\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column col-auto\\\">\\n      <label class=\\\"form-label\\\">Icon</label>\\n      <dd-image-upload [formGroup]=\\\"formGroup\\\" [eleId]=\\\"id\\\"></dd-image-upload>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"type\\\" class=\\\"form-label\\\">Type</label>\\n        <select class=\\\"form-input\\\" name=\\\"type\\\" id=\\\"type\\\" formControlName=\\\"type\\\">\\n          <option value=\\\"0\\\">Word</option>\\n          <option value=\\\"1\\\">Number</option>\\n          <option value=\\\"2\\\">Selection</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"class\\\" class=\\\"form-label\\\">Class</label>\\n        <select\\n          name=\\\"class\\\"\\n          id=\\\"class\\\"\\n          class=\\\"form-input\\\"\\n          formControlName=\\\"class\\\"\\n        >\\n          <option value=\\\"0\\\">Major</option>\\n          <option value=\\\"1\\\">Normal</option>\\n          <option value=\\\"2\\\">Minor</option>\\n          <option value=\\\"3\\\">Unimportant</option>\\n        </select>\\n      </div>\\n    </div>\\n\\n    <!-- Name -->\\n    <div class=\\\"column\\\">\\n      <div\\n        class=\\\"form-group\\\"\\n        [ngClass]=\\\"{ 'has-error': name.invalid && name.dirty }\\\"\\n      >\\n        <label for=\\\"name\\\" class=\\\"form-label\\\">Name</label>\\n        <input\\n          class=\\\"form-input\\\"\\n          formControlName=\\\"name\\\"\\n          type=\\\"text\\\"\\n          name=\\\"name\\\"\\n          id=\\\"name\\\"\\n          placeholder=\\\"Name\\\"\\n        />\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"name.invalid && name.dirty && name.errors.required\\\"\\n        >\\n          This attribute needs a name\\n        </p>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"name.invalid && name.dirty && name.errors.maxlength\\\"\\n        >\\n          Attribute names must be below 20 characters in length\\n        </p>\\n      </div>\\n\\n      <div\\n        class=\\\"form-group\\\"\\n        [ngClass]=\\\"{ 'has-error': description.invalid && description.dirty }\\\"\\n      >\\n        <label for=\\\"description\\\" class=\\\"form-label\\\">Description</label>\\n        <textarea\\n          name=\\\"description\\\"\\n          id=\\\"description\\\"\\n          class=\\\"form-input\\\"\\n          placeholder=\\\"Description\\\"\\n          formControlName=\\\"description\\\"\\n          rows=\\\"3\\\"\\n        ></textarea>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" *ngIf=\\\"type.value === '2'\\\">\\n        <label for=\\\"options\\\" class=\\\"form-label\\\">Options</label>\\n        <input\\n          class=\\\"form-input\\\"\\n          type=\\\"text\\\"\\n          name=\\\"options\\\"\\n          formControlName=\\\"options\\\"\\n          id=\\\"options\\\"\\n          placeholder=\\\"Big, Medium, Small\\\"\\n        />\\n        <p class=\\\"form-input-hint mb-1\\\">\\n          Comma separated list of possible values the user can choose from\\n        </p>\\n        <div>\\n          <div class=\\\"chip bg-primary\\\" *ngFor=\\\"let o of optionsList\\\">\\n            {{ o }}\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"columns\\\">\\n        <div class=\\\"column col-auto\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-checkbox\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                name=\\\"required\\\"\\n                formControlName=\\\"required\\\"\\n              />\\n              <i class=\\\"form-icon\\\"></i> Required attribute\\n            </label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"column\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-checkbox\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                name=\\\"required\\\"\\n                [formControl]=\\\"minControl\\\"\\n              />\\n              <i class=\\\"form-icon\\\"></i> Validate minimum\\n            </label>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" *ngIf=\\\"validateMin\\\">\\n            <label for=\\\"min\\\" class=\\\"form-label\\\">Minimum</label>\\n            <input\\n              class=\\\"form-input\\\"\\n              type=\\\"number\\\"\\n              name=\\\"min\\\"\\n              id=\\\"min\\\"\\n              formControlName=\\\"min\\\"\\n            />\\n            <p class=\\\"form-input-hint\\\">\\n              If the attribute type is word, this will validate the minimum\\n              number of characters in the word. If it is a number, this will be\\n              the smallest amount\\n            </p>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"column\\\">\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-checkbox\\\">\\n              <input\\n                type=\\\"checkbox\\\"\\n                name=\\\"required\\\"\\n                [formControl]=\\\"maxControl\\\"\\n              />\\n              <i class=\\\"form-icon\\\"></i> Validate maximum\\n            </label>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" *ngIf=\\\"validateMax\\\">\\n            <label for=\\\"max\\\" class=\\\"form-label\\\">Maximum</label>\\n            <input\\n              class=\\\"form-input\\\"\\n              type=\\\"number\\\"\\n              name=\\\"max\\\"\\n              id=\\\"max\\\"\\n              formControlName=\\\"max\\\"\\n            />\\n            <p class=\\\"form-input-hint\\\">\\n              If the attribute type is word, this will validate the maximum\\n              number of characters in the word (up to 255). If it is a number,\\n              this will be the largest amount\\n            </p>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { numberValidator } from '../dynamic-attribute-form/dynamic-attribute-form.component';\n\n@Component({\n  selector: 'dd-entity-attribute-row-editor',\n  templateUrl: './entity-attribute-row-editor.component.html',\n  styleUrls: ['./entity-attribute-row-editor.component.css'],\n})\nexport class EntityAttributeRowEditorComponent implements OnInit {\n  public minControl: FormControl;\n  public maxControl: FormControl;\n\n  public validateMin = false;\n  public validateMax = false;\n\n  @Output()\n  public remove = new EventEmitter<any>();\n\n  @Input()\n  public formGroup: FormGroup;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.minControl = new FormControl(false);\n    this.maxControl = new FormControl(false);\n\n    this.minControl.valueChanges.subscribe((v) => {\n      this.validateMin = v;\n    });\n\n    this.maxControl.valueChanges.subscribe((v) => {\n      this.validateMax = v;\n    });\n\n    this.formGroup.valueChanges.subscribe((v) => {\n      if (\n        this.formGroup.value.min !== undefined &&\n        this.formGroup.value.min !== null\n      ) {\n        this.minControl.setValue(true);\n      }\n\n      if (\n        this.formGroup.value.max !== undefined &&\n        this.formGroup.value.max !== null\n      ) {\n        this.maxControl.setValue(true);\n      }\n    });\n\n    // this should mean that the form group is empty\n    if (!this.formGroup.contains('name')) {\n      this.formGroup.addControl(\n        'name',\n        new FormControl(null, [\n          Validators.required,\n          Validators.minLength(1),\n          Validators.maxLength(20),\n        ])\n      );\n\n      this.formGroup.addControl(\n        'description',\n        new FormControl(null, [Validators.required])\n      );\n\n      this.formGroup.addControl(\n        'class',\n        new FormControl('1', [Validators.required])\n      );\n\n      this.formGroup.addControl(\n        'type',\n        new FormControl('0', [Validators.required])\n      );\n\n      this.formGroup.addControl(\n        'required',\n        new FormControl(true, [Validators.required])\n      );\n\n      this.formGroup.addControl(\n        'min',\n        new FormControl(null, [numberValidator])\n      );\n      this.formGroup.addControl(\n        'max',\n        new FormControl(null, [numberValidator])\n      );\n\n      this.formGroup.addControl(\n        'options',\n        new FormControl(null, [Validators.pattern(/([A-Za-z0-9._]+)/gi)])\n      );\n\n      this.formGroup.addControl('imageId', new FormControl(null));\n    }\n  }\n\n  public get name() {\n    return this.formGroup.get('name');\n  }\n\n  public get description() {\n    return this.formGroup.get('description');\n  }\n\n  public get type() {\n    return this.formGroup.get('type');\n  }\n\n  public get required() {\n    return this.formGroup.get('required');\n  }\n\n  public get min() {\n    return this.formGroup.get('min');\n  }\n\n  public get max() {\n    return this.formGroup.get('max');\n  }\n\n  public get options() {\n    return this.formGroup.get('options');\n  }\n\n  public get optionsList(): string[] {\n    if (this.options.value) {\n      return (this.options.value as string)\n        .split(',')\n        .map((o) => o.trim())\n        .filter((o) => o.length > 0);\n    } else {\n      return [];\n    }\n  }\n\n  public get id() {\n    return (this.formGroup.parent as FormArray).controls.indexOf(\n      this.formGroup\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container grid-xl\\\">\\n  <!-- Loader -->\\n  <div class=\\\"loading loading-lg\\\" *ngIf=\\\"loading\\\"></div>\\n\\n  <div class=\\\"columns\\\" *ngIf=\\\"entity !== undefined || !editing\\\">\\n    <div class=\\\"column\\\">\\n      <h3>Edit {{ preset.name }}</h3>\\n    </div>\\n    <div class=\\\"column col-auto col-ml-auto\\\">\\n      <a class=\\\"btn mr-2\\\" [routerLink]=\\\"['..']\\\">Cancel</a>\\n\\n      <button\\n        class=\\\"btn btn-primary\\\"\\n        (click)=\\\"save()\\\"\\n        [ngClass]=\\\"{ loading: saving }\\\"\\n        [disabled]=\\\"formGroup.invalid || attributesFormGroup.invalid\\\"\\n      >\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n  <!-- Form -->\\n  <div [formGroup]=\\\"formGroup\\\" *ngIf=\\\"entity !== undefined || !editing\\\">\\n    <div class=\\\"columns\\\">\\n      <div class=\\\"column col-auto\\\">\\n        <dd-image-upload [formGroup]=\\\"formGroup\\\"></dd-image-upload>\\n\\n        <div\\n          class=\\\"form-group\\\"\\n          [ngClass]=\\\"{\\n            'has-error': xp.invalid && (xp.touched || xp.dirty),\\n            'has-success': xp.valid && (xp.touched || xp.dirty)\\n          }\\\"\\n        >\\n          <label for=\\\"xp\\\" class=\\\"form-label\\\"\\n            >XP <span class=\\\"text-large text-bold text-primary\\\">*</span></label\\n          >\\n          <input\\n            type=\\\"number\\\"\\n            name=\\\"xp\\\"\\n            id=\\\"xp\\\"\\n            class=\\\"form-input\\\"\\n            placeholder=\\\"XP\\\"\\n            formControlName=\\\"xp\\\"\\n          />\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"xp.invalid && (xp.touched || xp.dirty) && xp.errors.required\\\"\\n          >\\n            An XP value is required\\n          </p>\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"xp.invalid && (xp.touched || xp.dirty) && xp.errors.min\\\"\\n          >\\n            XP must be more than 0\\n          </p>\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"xp.invalid && (xp.touched || xp.dirty) && xp.errors.max\\\"\\n          >\\n            Too many XP!!\\n          </p>\\n        </div>\\n      </div>\\n\\n      <!-- Standard form inputs -->\\n      <div class=\\\"column\\\">\\n        <!-- Name -->\\n        <div\\n          class=\\\"form-group\\\"\\n          [ngClass]=\\\"{\\n            'has-error': name.invalid && (name.touched || name.dirty),\\n            'has-success': name.valid && (name.touched || name.dirty)\\n          }\\\"\\n        >\\n          <label for=\\\"name\\\" class=\\\"form-lable\\\"\\n            >Name\\n            <span class=\\\"text-large text-bold text-primary\\\">*</span></label\\n          >\\n          <input\\n            type=\\\"text\\\"\\n            name=\\\"name\\\"\\n            id=\\\"name\\\"\\n            formControlName=\\\"name\\\"\\n            class=\\\"form-input\\\"\\n            placeholder=\\\"Name\\\"\\n          />\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"\\n              name.invalid &&\\n              (name.touched || name.dirty) &&\\n              name.errors.required\\n            \\\"\\n          >\\n            A name is required\\n          </p>\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"\\n              name.invalid &&\\n              (name.touched || name.dirty) &&\\n              name.errors.minlength\\n            \\\"\\n          >\\n            The name can't be shorter than 2 characters\\n          </p>\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"\\n              name.invalid &&\\n              (name.touched || name.dirty) &&\\n              name.errors.maxlength\\n            \\\"\\n          >\\n            The name can't be longer than 30 characters\\n          </p>\\n        </div>\\n\\n        <!-- Description -->\\n        <div\\n          class=\\\"form-group\\\"\\n          [ngClass]=\\\"{\\n            'has-error':\\n              description.invalid && (description.touched || description.dirty),\\n            'has-success':\\n              description.valid && (description.touched || description.dirty)\\n          }\\\"\\n        >\\n          <label for=\\\"description\\\" class=\\\"form-label\\\"\\n            >Description\\n            <span class=\\\"text-large text-bold text-primary\\\">*</span></label\\n          >\\n          <textarea\\n            name=\\\"description\\\"\\n            id=\\\"description\\\"\\n            formControlName=\\\"description\\\"\\n            rows=\\\"5\\\"\\n            class=\\\"form-input\\\"\\n            placeholder=\\\"Description\\\"\\n          ></textarea>\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"\\n              description.invalid &&\\n              (description.touched || description.dirty) &&\\n              description.errors.minlength\\n            \\\"\\n          >\\n            The description can't be shorter than 3 characters\\n          </p>\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"\\n              description.invalid &&\\n              (description.touched || description.dirty) &&\\n              description.errors.required\\n            \\\"\\n          >\\n            The description is required\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <h3 class=\\\"mt-2\\\">Custom Attributes</h3>\\n    <dd-dynamic-attribute-form\\n      [formGroup]=\\\"attributesFormGroup\\\"\\n      [attributes]=\\\"preset.attributes\\\"\\n    ></dd-dynamic-attribute-form>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { EntityService, IEntity } from 'src/app/entity.service';\nimport { CampaignService } from 'src/app/campaign.service';\nimport { numberValidator } from '../../dynamic-attribute-form/dynamic-attribute-form.component';\nimport { LoginService } from 'src/app/login.service';\n\n@Component({\n  selector: 'dd-entity-creation-form',\n  templateUrl: './entity-creation-form.component.html',\n  styleUrls: ['./entity-creation-form.component.css'],\n})\nexport class EntityCreationFormComponent implements OnInit {\n  public loading = false;\n\n  public saving = false;\n\n  public formGroup: FormGroup;\n\n  public attributesFormGroup: FormGroup;\n\n  private entity: IEntity;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private entityService: EntityService,\n    private campaignService: CampaignService,\n    private login: LoginService\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      const id = params.get('ent_id');\n\n      if (this.editing) {\n        this.loadEntity(id);\n      }\n    });\n\n    this.attributesFormGroup = new FormGroup({});\n\n    this.formGroup = new FormGroup({\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(30),\n      ]),\n      description: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(3),\n      ]),\n      xp: new FormControl(null, [\n        Validators.required,\n        numberValidator,\n        Validators.min(0),\n        Validators.max(2147483647),\n      ]),\n      imageId: new FormControl('uncertainty'),\n    });\n\n    // this.formGroup.valueChanges.subscribe((v) =>\n    //   console.log(v, this.formGroup)\n    // );\n  }\n\n  public async save() {\n    this.saving = true;\n    this.formGroup.disable();\n    this.attributesFormGroup.disable();\n\n    if (this.editing) {\n      try {\n        await this.entityService.updateEntity(this.constructEntity());\n        this.router.navigate(['../'], { relativeTo: this.route });\n      } catch (err) {\n        console.log('SAVE ERR', err);\n      }\n    } else {\n      try {\n        const ent = await this.entityService.createEntity(\n          this.constructEntity()\n        );\n\n        this.router.navigate([\n          'campaigns',\n          this.campaignService.campaign.id,\n          'entities',\n          ent.id,\n        ]);\n      } catch (err) {\n        console.log('Create ERR', err);\n      }\n    }\n\n    this.formGroup.enable();\n    this.attributesFormGroup.enable();\n    this.saving = false;\n  }\n\n  private constructEntity(): IEntity {\n    const v = this.formGroup.value;\n\n    const ent: IEntity = {\n      name: v.name,\n      description: v.description,\n      xp: v.xp,\n      imageId: v.imageId,\n      userId: this.login.id,\n      campaignId: this.campaignService.campaign.id,\n      entityPresetId: this.preset.id,\n      attributes: [],\n    };\n\n    for (const [k, v] of Object.entries(this.attributesFormGroup.value)) {\n      const preset = this.preset.attributes.find((p) => p.name === k);\n\n      ent.attributes.push({\n        name: preset.name,\n        data: v as string,\n        type: preset.type,\n      });\n    }\n\n    return ent;\n  }\n\n  private async loadEntity(id: string) {\n    this.loading = true;\n\n    try {\n      const ent = await this.entityService.getEntity(id);\n\n      this.entity = ent;\n\n      setTimeout(() => {\n        this.formGroup.patchValue(ent);\n\n        for (let attr of ent.attributes) {\n          if (this.attributesFormGroup.get(attr.name)) {\n            this.attributesFormGroup.get(attr.name).setValue(attr.data);\n          }\n        }\n      }, 1);\n    } catch (err) {\n      console.log('LOAD ERR', err);\n    }\n\n    this.loading = false;\n  }\n\n  public get preset() {\n    if (this.editing) {\n      return this.entity.preset;\n    } else {\n      return this.campaignService.campaign.entityPresets.find(\n        (ep) => ep.id === this.route.snapshot.paramMap.get('ent_type_id')\n      );\n    }\n  }\n\n  public get name() {\n    return this.formGroup.get('name');\n  }\n\n  public get description() {\n    return this.formGroup.get('description');\n  }\n\n  public get xp() {\n    return this.formGroup.get('xp');\n  }\n\n  public get editing() {\n    return this.route.snapshot.data.editing;\n  }\n}\n","module.exports = \"\"","module.exports = \"<dd-confirmation-modal #confirmmodal></dd-confirmation-modal>\\n<div class=\\\"container grid-xl\\\" [formGroup]=\\\"formGroup\\\" *ngIf=\\\"entityPreset\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column\\\">\\n      <h3 *ngIf=\\\"!editing\\\">Create Entity Preset</h3>\\n      <h3 *ngIf=\\\"editing\\\">Edit Entity Preset</h3>\\n    </div>\\n    <div class=\\\"column col-auto col-ml-auto\\\">\\n      <button\\n        class=\\\"btn btn-error mr-2\\\"\\n        (click)=\\\"delete()\\\"\\n        [ngClass]=\\\"{ loading: deleting }\\\"\\n      >\\n        Delete\\n      </button>\\n      <button\\n        class=\\\"btn\\\"\\n        (click)=\\\"save()\\\"\\n        [ngClass]=\\\"{ loading: saving }\\\"\\n        [disabled]=\\\"formGroup.invalid\\\"\\n      >\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"columns\\\">\\n    <!-- Image Upload -->\\n    <div class=\\\"column col-auto\\\">\\n      <label class=\\\"form-label\\\">Icon</label>\\n      <dd-image-upload [formGroup]=\\\"formGroup\\\"></dd-image-upload>\\n    </div>\\n\\n    <div class=\\\"column\\\">\\n      <!-- Name -->\\n      <div\\n        class=\\\"form-group\\\"\\n        [ngClass]=\\\"{\\n          'has-error': name.invalid && (name.dirty || name.touched)\\n        }\\\"\\n      >\\n        <label for=\\\"name\\\" class=\\\"form-label\\\">Name</label>\\n        <input\\n          type=\\\"text\\\"\\n          name=\\\"name\\\"\\n          id=\\\"name\\\"\\n          formControlName=\\\"name\\\"\\n          class=\\\"form-input\\\"\\n          placeholder=\\\"Name\\\"\\n        />\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"name.invalid && name.dirty && name.errors.required\\\"\\n        >\\n          A name is required\\n        </p>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"name.invalid && name.dirty && name.errors.minlength\\\"\\n        >\\n          Name should not have less than 3 characters\\n        </p>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"name.invalid && name.dirty && name.errors.maxlength\\\"\\n        >\\n          Name should not have more than 30 characters\\n        </p>\\n      </div>\\n\\n      <!-- Description -->\\n      <div\\n        class=\\\"form-group\\\"\\n        [ngClass]=\\\"{\\n          'has-error':\\n            description.invalid && (description.dirty || description.touched)\\n        }\\\"\\n      >\\n        <label for=\\\"description\\\" class=\\\"form-label\\\">Description</label>\\n        <textarea\\n          class=\\\"form-input\\\"\\n          name=\\\"description\\\"\\n          id=\\\"description\\\"\\n          rows=\\\"4\\\"\\n          formControlName=\\\"description\\\"\\n          placeholder=\\\"Description\\\"\\n        ></textarea>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"\\n            description.invalid &&\\n            description.dirty &&\\n            description.errors.required\\n          \\\"\\n        >\\n          A description is required\\n        </p>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"\\n            description.invalid &&\\n            description.dirty &&\\n            description.errors.minlength\\n          \\\"\\n        >\\n          The description should not have less than 3 characters\\n        </p>\\n      </div>\\n\\n      <h5 class=\\\"mt-2\\\">Health</h5>\\n      <!-- Health -->\\n      <div formGroupName=\\\"health\\\" class=\\\"columns\\\">\\n        <div class=\\\"column\\\">\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"health-mode\\\" class=\\\"form-label\\\">Health Mode</label>\\n            <select\\n              name=\\\"health-mode\\\"\\n              id=\\\"health-mode\\\"\\n              class=\\\"form-input\\\"\\n              formControlName=\\\"mode\\\"\\n            >\\n              <option value=\\\"0\\\">Normal</option>\\n              <option value=\\\"1\\\">Multi Bar</option>\\n            </select>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"column\\\">\\n          <!-- Default Max -->\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"hp-max\\\" class=\\\"form-label\\\">Default Max HP</label>\\n            <input\\n              formControlName=\\\"max\\\"\\n              type=\\\"number\\\"\\n              name=\\\"hp-max\\\"\\n              id=\\\"hp-max\\\"\\n              class=\\\"form-input\\\"\\n              placeholder=\\\"Default Max HP\\\"\\n            />\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- <h5 class=\\\"mt-2\\\">Starting Inventory</h5>\\n      <dd-inventory-selector\\n        [formGroup]=\\\"formGroup\\\"\\n        [entityPreset]=\\\"entityPreset\\\"\\n      ></dd-inventory-selector> -->\\n\\n      <h5 class=\\\"mt-2\\\">Misc</h5>\\n      <!-- Misc Options -->\\n      <div class=\\\"columns\\\">\\n        <div class=\\\"column\\\">\\n          <!-- Player Creatable -->\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"form-checkbox\\\">\\n              <input type=\\\"checkbox\\\" formControlName=\\\"playerCreatable\\\" />\\n              <i class=\\\"form-icon\\\"></i> Players can create this type of entity\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- Attributes -->\\n      <div>\\n        <div class=\\\"columns\\\">\\n          <div class=\\\"column\\\"><h5 class=\\\"mt-2\\\">Attributes</h5></div>\\n          <div class=\\\"column col-auto\\\">\\n            <button class=\\\"btn btn-sm\\\" (click)=\\\"addAttribute()\\\">\\n              <i class=\\\"icon icon-plus\\\"></i> Add Attribute\\n            </button>\\n          </div>\\n        </div>\\n\\n        <!-- Attribute Array -->\\n        <div>\\n          <dd-entity-attribute-row-editor\\n            *ngFor=\\\"let attr of attributeControls; let i = index\\\"\\n            (remove)=\\\"removeAttribute(i)\\\"\\n            [formGroup]=\\\"attr\\\"\\n          ></dd-entity-attribute-row-editor>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ConfirmationModalComponent } from 'src/app/confirmation-modal/confirmation-modal.component';\nimport { EntityService, IEntityPreset } from 'src/app/entity.service';\nimport { CampaignService } from 'src/app/campaign.service';\nimport { numberValidator } from '../dynamic-attribute-form/dynamic-attribute-form.component';\nimport { LoginService } from 'src/app/login.service';\n\n@Component({\n  selector: 'dd-entity-form',\n  templateUrl: './entity-form.component.html',\n  styleUrls: ['./entity-form.component.css'],\n})\nexport class EntityFormComponent implements OnInit {\n  public saving = false;\n  public deleting = false;\n  public loading = false;\n\n  public formGroup: FormGroup;\n\n  public entityPreset: IEntityPreset;\n\n  @ViewChild('confirmmodal')\n  public confirmModal: ConfirmationModalComponent;\n\n  constructor(\n    private entityService: EntityService,\n    private campaignService: CampaignService,\n    private login: LoginService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {\n    this.entityPreset = {\n      id: '',\n      name: '',\n      description: '',\n      userId: '',\n      imageId: '',\n      campaignId: '',\n      playerCreatable: false,\n    };\n\n    this.formGroup = new FormGroup({\n      id: new FormControl(),\n      name: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(30),\n      ]),\n      description: new FormControl(null, [\n        Validators.required,\n        Validators.minLength(3),\n      ]),\n      health: new FormGroup({\n        mode: new FormControl('0'),\n        max: new FormControl(null, [Validators.min(0), numberValidator]),\n        current: new FormControl(null, [Validators.min(0), numberValidator]),\n      }),\n      playerCreatable: new FormControl(false),\n      imageId: new FormControl(null, Validators.required),\n      attributes: new FormArray([]),\n    });\n\n    this.route.params.subscribe((params) => {\n      if (params.ent_id) {\n        this.loadEntityPreset(params.ent_id);\n      }\n    });\n  }\n\n  private async loadEntityPreset(id: string) {\n    this.loading = true;\n    this.formGroup.disable();\n\n    try {\n      const preset = await this.entityService.getEntityPreset(id);\n      this.entityPreset = preset;\n\n      for (let i = 0; i < preset.attributes.length; i++) {\n        this.addAttribute();\n      }\n\n      setTimeout(() => {\n        this.formGroup.patchValue({\n          id: preset.id,\n          name: preset.name,\n          description: preset.description,\n          attributes: preset.attributes,\n          imageId: preset.imageId,\n          playerCreatable: preset.playerCreatable,\n        });\n      }, 1);\n    } catch (err) {\n      console.log('LOAD ERR', err);\n    }\n\n    this.loading = false;\n    this.formGroup.enable();\n  }\n\n  public submit() {}\n\n  public removeAttribute(i: number) {\n    (this.formGroup.get('attributes') as FormArray).removeAt(i);\n  }\n\n  public async save() {\n    if (this.formGroup.valid) {\n      this.formGroup.disable();\n      this.saving = true;\n\n      if (this.editing) {\n        try {\n          const v = this.formGroup.value;\n\n          await this.entityService.updateEntityPreset({\n            id: this.entityPreset.id,\n            userId: this.login.id,\n            campaignId: this.campaignService.campaign.id,\n            name: v.name,\n            description: v.description,\n            imageId: v.imageId,\n            playerCreatable: v.playerCreatable,\n            attributes: v.attributes,\n          });\n\n          await this.router.navigate(['../../..', 'settings'], {\n            relativeTo: this.route,\n          });\n        } catch (err) {\n          console.log('SAVE ERR', err);\n        }\n      } else {\n        const v = this.formGroup.value;\n\n        const ep = await this.entityService.createEntityPreset({\n          id: this.entityPreset.id,\n          userId: this.login.id,\n          campaignId: this.campaignService.campaign.id,\n          name: v.name,\n          description: v.description,\n          imageId: v.imageId,\n          playerCreatable: v.playerCreatable,\n          attributes: v.attributes,\n        });\n\n        await this.router.navigate(['../..', 'settings'], {\n          relativeTo: this.route,\n        });\n\n        console.log('EF Create', ep);\n      }\n\n      this.saving = false;\n      this.formGroup.enable();\n    }\n  }\n\n  public async delete() {\n    if (\n      await this.confirmModal.getConfirmation(\n        'Are you sure you want to delete this entity? This cannot be undone'\n      )\n    ) {\n      this.deleting = true;\n      this.formGroup.disable();\n      try {\n        await this.entityService.deleteEntityPreset(\n          this.campaignService.campaign.id,\n          '1'\n        );\n        this.router.navigate(['../../..', 'settings'], {\n          relativeTo: this.route,\n        });\n      } catch (err) {\n        console.log('DEL ERR', err);\n      }\n      this.formGroup.enable();\n      this.deleting = false;\n    }\n  }\n\n  public addAttribute() {\n    (this.formGroup.get('attributes') as FormArray).push(new FormGroup({}));\n  }\n\n  public get attributeControls() {\n    return (this.formGroup.get('attributes') as FormArray).controls;\n  }\n\n  public get name() {\n    return this.formGroup.get('name');\n  }\n\n  public get description() {\n    return this.formGroup.get('description');\n  }\n\n  public get editing() {\n    return this.route.snapshot.data.editing;\n  }\n}\n","module.exports = \"<div class=\\\"container grid-xl\\\">\\n  <h3 class=\\\"mb-0\\\">Please choose a type</h3>\\n  <span class=\\\"text-gray mb-2\\\">\\n    These are the available types of entities the DM has allowed you to create\\n  </span>\\n\\n  <!-- Empty state -->\\n  <div class=\\\"empty mt-2\\\" *ngIf=\\\"presets.length === 0\\\">\\n    <div class=\\\"empty-icon\\\"><i class=\\\"icon icon-search icon-3x\\\"></i></div>\\n    <p class=\\\"empty-title h5\\\">There's nothing here!</p>\\n    <p class=\\\"empty-subtitle\\\">\\n      This campaign has not defined any entity types! Please bug your DM for\\n      this.\\n    </p>\\n  </div>\\n\\n  <div class=\\\"spacer\\\"></div>\\n\\n  <div *ngIf=\\\"!creating\\\">\\n    <div\\n      class=\\\"card hoverable mb-2 p-2\\\"\\n      *ngFor=\\\"let e of presets\\\"\\n      (click)=\\\"selectEntityType(e)\\\"\\n    >\\n      <div class=\\\"columns\\\">\\n        <div class=\\\"column col-auto\\\" *ngIf=\\\"e.imageId\\\">\\n          <figure class=\\\"avatar\\\">\\n            <img\\n              src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{\\n                e.imageId\\n              }}.png\\\"\\n            />\\n          </figure>\\n        </div>\\n        <div class=\\\"column\\\">\\n          <h4>{{ e.name }}</h4>\\n          <span class=\\\"text-gray\\\"> {{ e.description | truncate: 150 }} </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".spacer {\\n  margin-bottom: 2.5rem; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CampaignService } from 'src/app/campaign.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { EntityPreset } from 'src/app/entity';\nimport { EntityService, IEntityPreset } from 'src/app/entity.service';\n\n@Component({\n  selector: 'dd-entity-type-selector',\n  templateUrl: './entity-type-selector.component.html',\n  styleUrls: ['./entity-type-selector.component.scss'],\n})\nexport class EntityTypeSelectorComponent implements OnInit {\n  constructor(\n    private campaignService: CampaignService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private entityService: EntityService\n  ) {}\n\n  ngOnInit() {}\n\n  public async selectEntityType(preset: IEntityPreset) {\n    this.router.navigate(['..', preset.id, 'create'], {\n      relativeTo: this.route,\n    });\n  }\n\n  public get presets(): IEntityPreset[] {\n    return this.campaignService.campaign.entityPresets.filter(\n      (e) => e.playerCreatable\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<dd-modal #modal>\\n  <div modal-header *ngIf=\\\"attribute && control\\\">\\n    <div class=\\\"modal-title\\\">Edit {{ attribute.name }}</div>\\n  </div>\\n\\n  <div modal-body *ngIf=\\\"attribute && control\\\">\\n    <form (ngSubmit)=\\\"ok()\\\" #attrForm=\\\"ngForm\\\">\\n      <div\\n        class=\\\"form-group\\\"\\n        [ngClass]=\\\"{\\n          'has-error': control.invalid && (control.dirty || control.touched),\\n          'has-success': control.valid && (control.dirty || control.touched)\\n        }\\\"\\n      >\\n        <div [ngClass]=\\\"{ 'has-icon-left': attribute.imageId }\\\" [ngSwitch]=\\\"attribute.type\\\">\\n          <!-- Text Input -->\\n          <input\\n            type=\\\"text\\\"\\n            name=\\\"attr\\\"\\n            class=\\\"form-input\\\"\\n            [placeholder]=\\\"attribute.name\\\"\\n            [formControl]=\\\"control\\\"\\n            *ngSwitchCase=\\\"0\\\"\\n          />\\n\\n          <!-- Number Input -->\\n          <input\\n            type=\\\"number\\\"\\n            name=\\\"attr\\\"\\n            class=\\\"form-input\\\"\\n            [placeholder]=\\\"attribute.name\\\"\\n            [formControl]=\\\"control\\\"\\n            *ngSwitchCase=\\\"1\\\"\\n          />\\n\\n          <!-- Enum input -->\\n          <select class=\\\"form-input\\\" name=\\\"attr\\\" [formControl]=\\\"control\\\" *ngSwitchCase=\\\"2\\\">\\n            <option *ngFor=\\\"let o of attribute.options\\\" [value]=\\\"o\\\">{{ o }}</option>\\n          </select>\\n\\n          <figure class=\\\"form-icon avatar\\\" *ngIf=\\\"attribute.imageId\\\">\\n            <img src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{ attribute.imageId }}.png\\\" />\\n          </figure>\\n        </div>\\n        <p class=\\\"form-input-hint mb-0\\\">{{ attribute.description }}</p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"control.invalid && (control.dirty || control.touched) && control.errors.required\\\"\\n        >\\n          {{ attribute.name }} is required\\n        </p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"control.invalid && (control.dirty || control.touched) && control.errors.min\\\"\\n        >\\n          {{ attribute.name }} can't be lower than {{ attribute.min }}\\n        </p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"control.invalid && (control.dirty || control.touched) && control.errors.max\\\"\\n        >\\n          {{ attribute.name }} can't be higher than {{ attribute.max }}\\n        </p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"control.invalid && (control.dirty || control.touched) && control.errors.minlength\\\"\\n        >\\n          {{ attribute.name }} cannot have less than {{ attribute.min }} characters\\n        </p>\\n        <p\\n          class=\\\"form-input-hint mb-1\\\"\\n          *ngIf=\\\"control.invalid && (control.dirty || control.touched) && control.errors.maxlength\\\"\\n        >\\n          {{ attribute.name }} cannot have more than {{ attribute.max }} characters\\n        </p>\\n      </div>\\n    </form>\\n  </div>\\n\\n  <div modal-footer *ngIf=\\\"attribute && control\\\">\\n    <button class=\\\"btn btn-primary mr-2\\\" (click)=\\\"cancel()\\\">Cancel</button>\\n    <button class=\\\"btn\\\" (click)=\\\"ok()\\\" [disabled]=\\\"control.invalid\\\">Save</button>\\n  </div>\\n</dd-modal>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { EntityAttribute } from 'src/app/entity';\nimport { ModalComponent } from 'src/app/modal/modal.component';\nimport { FormControl, Validators, ValidatorFn } from '@angular/forms';\nimport { AttributeType } from 'src/app/attributes';\nimport { numberValidator } from '../../dynamic-attribute-form/dynamic-attribute-form.component';\n\n@Component({\n  selector: 'dd-entity-attribute-editor-modal',\n  templateUrl: './entity-attribute-editor-modal.component.html',\n  styleUrls: ['./entity-attribute-editor-modal.component.css'],\n})\nexport class EntityAttributeEditorModalComponent implements OnInit {\n  @ViewChild('modal')\n  public modal: ModalComponent<string | null>;\n\n  public attribute: EntityAttribute;\n\n  public control: FormControl;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public async editAttribute(attribute: EntityAttribute, currentValue?: string): Promise<string | null> {\n    this.attribute = attribute;\n    this.setupControl(currentValue);\n    return this.modal.open();\n  }\n\n  public ok() {\n    if (this.control.invalid) {\n      return;\n    }\n\n    this.modal.close(this.control.value);\n  }\n\n  public cancel() {\n    this.modal.close(null);\n  }\n\n  public setupControl(currentValue?: string) {\n    const validators: ValidatorFn[] = [];\n\n    if (this.attribute.type === AttributeType.STRING) {\n      if (this.attribute.min !== undefined && this.attribute.min !== null) {\n        validators.push(Validators.minLength(this.attribute.min));\n      }\n\n      if (this.attribute.max !== undefined && this.attribute.max !== null) {\n        validators.push(Validators.maxLength(this.attribute.max));\n      }\n    } else if (this.attribute.type === AttributeType.NUMBER) {\n      if (this.attribute.min !== undefined && this.attribute.min !== null) {\n        validators.push(Validators.min(this.attribute.min));\n      }\n\n      if (this.attribute.max !== undefined && this.attribute.max !== null) {\n        validators.push(Validators.max(this.attribute.max));\n      }\n\n      validators.push(numberValidator);\n    }\n\n    if (this.attribute.required) {\n      validators.push(Validators.required);\n    }\n\n    this.control = new FormControl(currentValue, validators);\n  }\n}\n","module.exports = \"<div class=\\\"loading loading-lg\\\" *ngIf=\\\"loading\\\"></div>\\n\\n<dd-entity-attribute-editor-modal\\n  #attributemodal\\n></dd-entity-attribute-editor-modal>\\n\\n<!-- Background container -->\\n<div\\n  class=\\\"player-bg d-flex\\\"\\n  *ngIf=\\\"entity\\\"\\n  [style.background-image]=\\\"backgroundCSS(entity.imageId)\\\"\\n>\\n  <div id=\\\"head-container\\\">\\n    <!-- Top row -->\\n    <div class=\\\"container grid-xl mb-auto\\\">\\n      <div class=\\\"columns text-gray\\\">\\n        <div class=\\\"column\\\" *ngIf=\\\"saving\\\">Saving...</div>\\n      </div>\\n    </div>\\n\\n    <!-- Bottom Row -->\\n    <div class=\\\"container grid-xl\\\">\\n      <div class=\\\"columns text-light\\\">\\n        <div class=\\\"column text-light mb-1\\\">\\n          <h3\\n            class=\\\"mb-0 text-bold\\\"\\n            [ngClass]=\\\"{ 'c-hand': editable }\\\"\\n            (click)=\\\"editName()\\\"\\n          >\\n            {{ entity.name }}\\n            <a class=\\\"text-light\\\" [routerLink]=\\\"['edit']\\\"\\n              ><i class=\\\"icon icon-edit\\\"></i\\n            ></a>\\n          </h3>\\n          <span class=\\\"text-italic\\\">{{ entity.preset.name }}</span>\\n        </div>\\n        <div class=\\\"column d-flex justify-end align-items-end col-ml-auto\\\">\\n          <span [ngClass]=\\\"{ 'c-hand': editable }\\\" (click)=\\\"editXP()\\\">\\n            <span class=\\\"h5\\\">LV. </span>\\n            <span class=\\\"h3 text-bold\\\">{{ level }}</span>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container grid-xl\\\" *ngIf=\\\"entity\\\">\\n  <!-- Major attributes -->\\n  <div class=\\\"columns\\\" *ngIf=\\\"majorAttributes.length > 0\\\">\\n    <div\\n      class=\\\"column col-2 col-md-3 col-sm-5 col-mx-auto text-center\\\"\\n      [ngClass]=\\\"{ 'c-hand': editable }\\\"\\n      *ngFor=\\\"let a of majorAttributes\\\"\\n      (click)=\\\"editAttribute(a)\\\"\\n    >\\n      <div class=\\\"h5\\\">\\n        <figure class=\\\"avatar avatar-sm\\\" *ngIf=\\\"a.pattr && a.pattr.imageId\\\">\\n          <img\\n            src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{\\n              a.pattr.imageId\\n            }}.png\\\"\\n          />\\n        </figure>\\n        {{ a.attr.name }}\\n      </div>\\n      <div class=\\\"h4 text-bold\\\">{{ a.attr.data }}</div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"divider\\\" *ngIf=\\\"majorAttributes.length > 0\\\"></div>\\n\\n  <!-- Normal Attributes -->\\n  <div class=\\\"columns\\\" *ngIf=\\\"normalAttributes.length > 0\\\">\\n    <div\\n      class=\\\"column col-1 col-md-2 col-sm-3 col-mx-auto text-center\\\"\\n      [ngClass]=\\\"{ 'c-hand': editable }\\\"\\n      *ngFor=\\\"let a of normalAttributes\\\"\\n      (click)=\\\"editAttribute(a)\\\"\\n    >\\n      <div class=\\\"h6\\\">\\n        <figure class=\\\"avatar avatar-xs\\\" *ngIf=\\\"a.pattr && a.pattr.imageId\\\">\\n          <img\\n            src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{\\n              a.pattr.imageId\\n            }}.png\\\"\\n          />\\n        </figure>\\n        {{ a.attr.name }}\\n      </div>\\n      <div class=\\\"h5\\\">{{ a.attr.data }}</div>\\n    </div>\\n  </div>\\n  <div class=\\\"divider\\\" *ngIf=\\\"normalAttributes.length > 0\\\"></div>\\n\\n  <div class=\\\"columns\\\">\\n    <!-- Sidebar -->\\n    <div class=\\\"column col-auto col-ml-auto\\\" *ngIf=\\\"minorAttributes.length > 0\\\">\\n      <div class=\\\"table table-striped\\\" [ngClass]=\\\"{ 'table-hover': editable }\\\">\\n        <thead>\\n          <tr>\\n            <th>Minor Attributes</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr\\n            [ngClass]=\\\"{ 'c-hand': editable }\\\"\\n            *ngFor=\\\"let attr of minorAttributes\\\"\\n            (click)=\\\"editAttribute(attr)\\\"\\n          >\\n            <td>\\n              <figure\\n                class=\\\"avatar avatar-xs\\\"\\n                *ngIf=\\\"attr.pattr && attr.pattr.imageId\\\"\\n              >\\n                <img\\n                  src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{\\n                    attr.pattr.imageId\\n                  }}.png\\\"\\n                />\\n              </figure>\\n              {{ attr.attr.name }}\\n            </td>\\n            <td class=\\\"text-bold\\\">{{ attr.attr.data }}</td>\\n          </tr>\\n        </tbody>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".player-bg {\\n  background-color: black;\\n  min-height: 20vh;\\n  margin-top: -0.4rem;\\n  background-size: cover;\\n  background-repeat: no-repeat;\\n  background-position: center;\\n  background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, black 100%), url(\\\"http://res.cloudinary.com/dqhk8k6iv/image/upload/t_chr_blur/chr_test.jpg\\\"); }\\n\\n#head-container {\\n  width: 100%;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: end; }\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EntityAttributeEditorModalComponent } from './entity-attribute-editor-modal/entity-attribute-editor-modal.component';\nimport { Entity, EntityAttribute, AttributeClass } from 'src/app/entity';\nimport { EntityService, IEntity } from 'src/app/entity.service';\nimport { CampaignService } from 'src/app/campaign.service';\nimport { AttributeType, Attribute } from 'src/app/attributes';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n@Component({\n  selector: 'dd-entity-view',\n  templateUrl: './entity-view.component.html',\n  styleUrls: ['./entity-view.component.scss'],\n})\nexport class EntityViewComponent implements OnInit {\n  @ViewChild('attributemodal')\n  public attributeModal: EntityAttributeEditorModalComponent;\n\n  public entity: IEntity;\n\n  public loading = false;\n\n  public saving = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private entityService: EntityService,\n    private campaignService: CampaignService,\n    private sanitizer: DomSanitizer\n  ) {}\n\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.loadEntity(params.get('ent_id'));\n    });\n  }\n\n  private async loadEntity(id: string) {\n    this.loading = true;\n\n    try {\n      const ent = await this.entityService.getEntity(id);\n      this.entity = ent;\n    } catch (err) {\n      console.log('LOAD ERR', err);\n    }\n\n    this.loading = false;\n  }\n\n  public async editAttribute(attr: {\n    attr: Attribute;\n    pattr: EntityAttribute;\n  }) {\n    const attrValue = await this.attributeModal.editAttribute(\n      { ...attr.pattr },\n      attr.attr.data\n    );\n\n    if (attrValue !== null && attrValue !== undefined) {\n      for (const attribute of this.entity.attributes) {\n        if (attribute.name === attr.attr.name) {\n          attribute.data = attrValue;\n          break;\n        }\n      }\n\n      this.updateEntity();\n    }\n  }\n\n  public async editName() {\n    const attrValue = await this.attributeModal.editAttribute(\n      {\n        name: 'Name',\n        description: `What the ${this.entity.preset.name} is called`,\n        type: AttributeType.STRING,\n        required: true,\n        min: 2,\n        max: 30,\n        class: AttributeClass.NORMAL,\n      },\n      this.entity.name\n    );\n\n    if (attrValue !== null && attrValue !== undefined) {\n      this.entity.name = attrValue;\n      this.updateEntity();\n    }\n  }\n\n  public async editXP() {\n    const attrValue = await this.attributeModal.editAttribute(\n      {\n        name: 'XP',\n        description: `Experience points that this ${\n          this.entity.preset.name\n        } has`,\n        type: AttributeType.NUMBER,\n        required: true,\n        min: 0,\n        max: 2147483647,\n        class: AttributeClass.NORMAL,\n      },\n      this.entity.xp.toString()\n    );\n\n    if (attrValue !== null && attrValue !== undefined) {\n      this.entity.xp = parseInt(attrValue, 10);\n      this.updateEntity();\n    }\n  }\n\n  private async updateEntity() {\n    this.saving = true;\n\n    try {\n      await this.entityService.updateEntity(this.entity);\n    } catch (err) {\n      console.log('UPDATE ERR', err);\n    }\n\n    this.saving = false;\n  }\n\n  private getEntityAttribute(name: string) {\n    return this.entity.preset.attributes.find((e) => e.name === name);\n  }\n\n  public get processedAttributes(): {\n    attr: Attribute;\n    pattr: EntityAttribute;\n  }[] {\n    return this.entity.attributes.map((a) => {\n      return {\n        attr: a,\n        pattr: this.getEntityAttribute(a.name),\n      };\n    });\n  }\n\n  public get majorAttributes(): { attr: Attribute; pattr: EntityAttribute }[] {\n    return this.entity.attributes\n      .map((a) => {\n        return {\n          attr: a,\n          pattr: this.getEntityAttribute(a.name),\n        };\n      })\n      .filter((a) => a.pattr && a.pattr.class === 0);\n  }\n\n  public get normalAttributes(): { attr: Attribute; pattr: EntityAttribute }[] {\n    return this.entity.attributes\n      .map((a) => {\n        return {\n          attr: a,\n          pattr: this.getEntityAttribute(a.name),\n        };\n      })\n      .filter((a) => a.pattr && a.pattr.class === 1);\n  }\n\n  public get minorAttributes(): { attr: Attribute; pattr: EntityAttribute }[] {\n    return this.entity.attributes\n      .map((a) => {\n        return {\n          attr: a,\n          pattr: this.getEntityAttribute(a.name),\n        };\n      })\n      .filter((a) => a.pattr && a.pattr.class === 2);\n  }\n\n  public get unimportantAttributes(): {\n    attr: Attribute;\n    pattr: EntityAttribute;\n  }[] {\n    return this.entity.attributes\n      .map((a) => {\n        return {\n          attr: a,\n          pattr: this.getEntityAttribute(a.name),\n        };\n      })\n      .filter((a) => a.pattr && a.pattr.class === 3);\n  }\n\n  public get level() {\n    return this.campaignService.calculateLevel(this.entity.xp);\n  }\n\n  public get editable() {\n    return true;\n  }\n\n  public backgroundCSS(imageId: string) {\n    return this.sanitizer.bypassSecurityTrustStyle(\n      `linear-gradient(to bottom, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 1) 100%), url(\"http://res.cloudinary.com/dqhk8k6iv/image/upload/t_chr_blur/${imageId}.jpg\")`\n    );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container grid-xl\\\">\\n  <h3>Hello, {{ user.username }}</h3>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\n\n@Component({\n  selector: 'dd-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent implements OnInit {\n  constructor(private login: LoginService) {}\n\n  ngOnInit() {}\n\n  public get user() {\n    return this.login.user;\n  }\n}\n","module.exports = \"<div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': control.invalid }\\\">\\n  <div\\n    class=\\\"p-2\\\"\\n    id=\\\"drop-area\\\"\\n    [ngClass]=\\\"{\\n      'drag-over': isDragOver,\\n      'file-has-error': control.invalid\\n    }\\\"\\n    #fupload\\n  >\\n    <input\\n      type=\\\"file\\\"\\n      [id]=\\\"controlId\\\"\\n      accept=\\\"image/*\\\"\\n      class=\\\"file-input\\\"\\n      (change)=\\\"onFileChange($event)\\\"\\n    />\\n    <label class=\\\"btn btn-sm text-ellipsis\\\" [for]=\\\"controlId\\\">\\n      <span *ngIf=\\\"file === null && imageURL === null\\\">Upload Image</span>\\n      <span *ngIf=\\\"file === null && imageURL !== null\\\">Change Image</span>\\n      <span *ngIf=\\\"file !== null\\\">{{ file.name }}</span>\\n    </label>\\n    <button\\n      class=\\\"btn btn-error btn-sm mt-2\\\"\\n      *ngIf=\\\"imageURL !== null\\\"\\n      (click)=\\\"clearImage()\\\"\\n    >\\n      Clear Image\\n    </button>\\n\\n    <!-- Progress bar -->\\n    <div class=\\\"bar bar-sm mt-2\\\" *ngIf=\\\"isUploading\\\">\\n      <div\\n        class=\\\"bar-item\\\"\\n        role=\\\"progressbar\\\"\\n        [style.width]=\\\"uploadProgress + '%'\\\"\\n      ></div>\\n    </div>\\n\\n    <!-- Preview image -->\\n    <img\\n      class=\\\"image-preview img-fit-contain mt-2\\\"\\n      *ngIf=\\\"imageURL !== null\\\"\\n      [src]=\\\"imageURL\\\"\\n    />\\n  </div>\\n  <p class=\\\"form-input-hint\\\" *ngIf=\\\"control.invalid && control.errors.required\\\">\\n    An image is required\\n  </p>\\n</div>\\n\\n<div class=\\\"toast toast-error\\\" *ngIf=\\\"fileError !== null\\\">\\n  <button class=\\\"btn btn-clear float-right\\\" (click)=\\\"clearError()\\\"></button>\\n  {{ fileError }}\\n</div>\\n\"","module.exports = \"#drop-area {\\n  border: 2px dashed #5755d9;\\n  border-radius: 0.1rem;\\n  display: flex;\\n  align-content: center;\\n  justify-content: center;\\n  flex-direction: column; }\\n\\n.form-group.has-error > #drop-area {\\n  border: 2px dashed #e85600; }\\n\\n#drop-area.drag-over {\\n  cursor: pointer;\\n  background: #f1f1fc; }\\n\\n.file-input {\\n  display: none; }\\n\\n.image-preview {\\n  height: 10vh; }\\n\"","import {\n  Component,\n  OnInit,\n  ViewChild,\n  AfterViewInit,\n  ElementRef,\n  Input,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'dd-image-upload',\n  templateUrl: './image-upload.component.html',\n  styleUrls: ['./image-upload.component.scss'],\n})\nexport class ImageUploadComponent implements OnInit, AfterViewInit {\n  @ViewChild('fupload')\n  public fupload: ElementRef<HTMLElement>;\n\n  public file: File = null;\n  public fileError: string = null;\n\n  public isDragOver = false;\n\n  public isUploading = false;\n  public uploadProgress: number = null;\n\n  @Input()\n  public formGroup: FormGroup;\n\n  @Input()\n  public eleId = '';\n\n  constructor() {}\n\n  ngOnInit() {\n    if (!this.formGroup.contains('imageId')) {\n      this.formGroup.addControl('imageId', new FormControl(null));\n    }\n  }\n\n  ngAfterViewInit(): void {\n    ['dragenter', 'dragover'].forEach((evt) =>\n      this.fupload.nativeElement.addEventListener(evt, (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.isDragOver = true;\n      })\n    );\n\n    ['dragleave', 'dragend', 'drop'].forEach((evt) =>\n      this.fupload.nativeElement.addEventListener(evt, (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        this.isDragOver = false;\n      })\n    );\n\n    this.fupload.nativeElement.addEventListener('drop', (e) => {\n      if (e.dataTransfer.files.length > 0) {\n        this.handleFileUpload(e.dataTransfer.files[0]);\n      }\n    });\n  }\n\n  public clearImage() {\n    this.formGroup.get('imageId').reset();\n  }\n\n  public clearError() {\n    this.fileError = null;\n  }\n\n  public onFileChange(event: Event) {\n    const files = (event.target as HTMLInputElement).files;\n\n    if (files.length > 0) {\n      this.handleFileUpload(files[0]);\n    }\n  }\n\n  public get imageURL() {\n    if (\n      this.formGroup.get('imageId').value !== null &&\n      this.formGroup.get('imageId').value !== undefined &&\n      this.formGroup.get('imageId').value !== ''\n    ) {\n      return `https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/${\n        this.formGroup.get('imageId').value\n      }.png`;\n    } else {\n      return null;\n    }\n  }\n\n  public handleFileUpload(file: File) {\n    this.fileError = null;\n    this.uploadProgress = null;\n\n    if (!file.type.startsWith('image/')) {\n      this.fileError = 'Incorrect file type! Only images are accepted';\n      return;\n    }\n\n    this.file = file;\n\n    const form = new FormData();\n    form.append('file', this.file);\n    form.append('upload_preset', 'gvmyptoo');\n\n    const xhr = new XMLHttpRequest();\n    xhr.open(\n      'POST',\n      'https://api.cloudinary.com/v1_1/dqhk8k6iv/auto/upload',\n      true\n    );\n\n    xhr.onload = (e) => {\n      const image = JSON.parse(xhr.responseText);\n      this.isUploading = false;\n      this.file = null;\n      this.formGroup.get('imageId').setValue(image.public_id);\n    };\n\n    xhr.upload.addEventListener('progress', (e) => {\n      this.uploadProgress = (e.loaded / e.total) * 100;\n    });\n\n    this.isUploading = true;\n    xhr.send(form);\n  }\n\n  public get controlId() {\n    return `file-upload-${this.eleId}`;\n  }\n\n  public get control() {\n    return this.formGroup.get('imageId');\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container grid-xl\\\">\\n  <!-- Loading -->\\n  <div class=\\\"columns\\\" *ngIf=\\\"loading\\\">\\n    <div class=\\\"column col-4 col-md-6 col-sm-12 col-mx-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-body\\\">\\n          Processing information...\\n          <div class=\\\"loading\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"columns\\\" *ngIf=\\\"!loading && campaign\\\">\\n    <div class=\\\"column col-6 col-md-10 col-sm-12 text-center col-mx-auto\\\">\\n      <!-- Invite Display -->\\n      <div class=\\\"card p-2\\\" *ngIf=\\\"invite.status === 0\\\">\\n        <h2>Would you like to join this campaign?</h2>\\n        <figure class=\\\"avatar avatar-xl align-self-center\\\">\\n          <img\\n            src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{\\n              campaign.imageId\\n            }}.png\\\"\\n          />\\n        </figure>\\n        <h1>{{ campaign.name }}</h1>\\n        <p class=\\\"text-gray\\\">{{ campaign.description }}</p>\\n        <!-- Buttons -->\\n        <button class=\\\"btn btn-lg my-2\\\" (click)=\\\"deny()\\\">No</button>\\n        <button\\n          class=\\\"btn btn-primary btn-lg\\\"\\n          [ngClass]=\\\"{ loading: accepting }\\\"\\n          (click)=\\\"accept()\\\"\\n        >\\n          Yes\\n        </button>\\n      </div>\\n\\n      <!-- Invalid Invite Display -->\\n      <div class=\\\"toast text-left toast-error\\\" *ngIf=\\\"invite.status !== 0\\\">\\n        <h6>Invalid Invite</h6>\\n        <p>\\n          Unfortunately this invite is no longer valid. Sorry about that\\n          ¯\\\\_(ツ)_/¯\\n        </p>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { ActionQueueService, ActionType } from '../action-queue.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {\n  ICampaign,\n  CampaignService,\n  ICampaignInvite,\n} from '../campaign.service';\nimport { t } from '@angular/core/src/render3';\n\n@Component({\n  selector: 'dd-invite',\n  templateUrl: './invite.component.html',\n  styleUrls: ['./invite.component.css'],\n})\nexport class InviteComponent implements OnInit {\n  public loading = false;\n  public campaign: ICampaign;\n  public invite: ICampaignInvite;\n\n  public accepting = false;\n  public denying = false;\n\n  constructor(\n    private login: LoginService,\n    private actions: ActionQueueService,\n    private campaignService: CampaignService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  async ngOnInit() {\n    const actions = this.actions.queue;\n    actions.unshift({\n      type: ActionType.INVITE,\n      data: {\n        inviteId: this.route.snapshot.paramMap.get('invite_id'),\n      },\n    });\n    this.actions.save();\n\n    const isLoggedIn = await this.login.isLoggedIn();\n\n    if (!isLoggedIn) {\n      this.router.navigate(['login']);\n    } else {\n      try {\n        this.loading = true;\n        await this.loadInvite();\n        await this.loadCampaign();\n\n        if (this.invite.status !== 0) {\n          this.actions.queue.pop();\n          this.actions.save();\n        }\n      } catch (err) {\n        this.actions.queue.pop();\n        this.actions.save();\n\n        await this.router\n          .navigate(['home'])\n          .catch((err) =>\n            console.log('ROPUTE', err.name, err.message, err.stack)\n          );\n      }\n      this.loading = false;\n    }\n  }\n\n  public async accept() {\n    this.accepting = true;\n\n    try {\n      await this.campaignService.acceptInvite(this.invite.id);\n\n      this.actions.queue.pop();\n      this.actions.save();\n      this.router.navigate(['campaigns', this.campaign.id, 'landing']);\n    } catch (err) {\n      console.log('ACCERR', err);\n    }\n\n    this.accepting = true;\n  }\n\n  public async deny() {\n    this.denying = true;\n\n    try {\n      await this.campaignService.denyInvite(this.invite.id);\n    } catch (err) {\n      console.log('ACCERR', err);\n    }\n\n    this.actions.queue.pop();\n    this.actions.save();\n    this.router.navigate(['home']);\n\n    this.denying = true;\n  }\n\n  private async loadCampaign() {\n    try {\n      const campaign = await this.campaignService.getCampaign(\n        this.invite.campaignId\n      );\n      this.campaign = campaign;\n    } catch (err) {\n      console.log('CLERR', err);\n      throw err;\n    }\n  }\n\n  private async loadInvite() {\n    try {\n      const invite = await this.campaignService.getInvite(\n        this.route.snapshot.paramMap.get('invite_id')\n      );\n      this.invite = invite;\n    } catch (err) {\n      console.log('INVITE LOAD ERR', err);\n      throw err;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Item } from './item';\nimport { AttributeType } from './attributes';\nimport { Chance } from 'chance';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ItemService {\n  constructor() {}\n\n  public async createItem(): Promise<string> {\n    await simulateDelay(250);\n    return '1';\n  }\n\n  public async saveItem(item: Item): Promise<Item> {\n    await simulateDelay(250);\n    return item;\n  }\n\n  public async getItem(id: string): Promise<Item> {\n    if (id === '1') {\n      const c = new Chance();\n\n      const item: Item = {\n        id: id,\n        name: '--_blank_--',\n        description: '--_blank_--',\n        imageId: 'uncertainty',\n        attributes: [{ name: 'Weight', data: '6', type: AttributeType.NUMBER }],\n      };\n\n      return item;\n    }\n    const c = new Chance();\n\n    const item: Item = {\n      id: id,\n      name: c.sentence({ words: c.integer({ min: 1, max: 3 }) }),\n      description: c.paragraph(),\n      imageId: 'uncertainty',\n      attributes: [{ name: 'Weight', data: '6', type: AttributeType.NUMBER }],\n    };\n\n    return item;\n  }\n\n  public async deleteItem(id: string): Promise<void> {\n    await simulateDelay(255);\n  }\n}\n\n// Used in mock apis, will be removed\nconst simulateDelay = (ms: number): Promise<void> => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, ms);\n  });\n};\n","module.exports = \"\"","module.exports = \"<div [formGroup]=\\\"formGroup\\\">\\n  <button class=\\\"btn\\\" (click)=\\\"addAttribute()\\\">Add Attribute</button>\\n  <div\\n    formArrayName=\\\"attributes\\\"\\n    *ngFor=\\\"let item of attributeControls; let i = index\\\"\\n  >\\n    <div class=\\\"columns\\\" [formGroupName]=\\\"i\\\">\\n      <div class=\\\"column\\\">\\n        <div\\n          class=\\\"form-group\\\"\\n          [ngClass]=\\\"{ 'has-error': getNameErrors(i) !== null }\\\"\\n        >\\n          <label class=\\\"form-label\\\">Name</label>\\n          <input\\n            class=\\\"form-input\\\"\\n            formControlName=\\\"name\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"Name\\\"\\n          />\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"getNameErrors(i) !== null && getNameErrors(i).required\\\"\\n          >\\n            The attribute needs a name\\n          </p>\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"getNameErrors(i) !== null && getNameErrors(i).minlength\\\"\\n          >\\n            The name cannot be shorter than 3 characters\\n          </p>\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"getNameErrors(i) !== null && getNameErrors(i).maxlength\\\"\\n          >\\n            The name cannot be longer than 50 characters\\n          </p>\\n        </div>\\n      </div>\\n      <div class=\\\"column\\\">\\n        <div\\n          class=\\\"form-group\\\"\\n          [ngClass]=\\\"{\\n            'has-error': getDataErrors(i) !== null\\n          }\\\"\\n        >\\n          <label class=\\\"form-label\\\">Value</label>\\n          <input\\n            class=\\\"form-input\\\"\\n            formControlName=\\\"data\\\"\\n            type=\\\"text\\\"\\n            placeholder=\\\"Value\\\"\\n            *ngIf=\\\"formGroup.value.attributes[i].type === '0'\\\"\\n          />\\n          <input\\n            class=\\\"form-input\\\"\\n            formControlName=\\\"data\\\"\\n            type=\\\"number\\\"\\n            placeholder=\\\"Value\\\"\\n            *ngIf=\\\"formGroup.value.attributes[i].type === '1'\\\"\\n          />\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"getDataErrors(i) !== null && getDataErrors(i).required\\\"\\n          >\\n            The attribute needs a value\\n          </p>\\n          <p\\n            class=\\\"form-input-hint\\\"\\n            *ngIf=\\\"getDataErrors(i) !== null && getDataErrors(i).maxlength\\\"\\n          >\\n            The value cannot be longer than 255 characters\\n          </p>\\n        </div>\\n      </div>\\n      <div class=\\\"column\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"form-label\\\">Type</label>\\n          <select class=\\\"form-select\\\" formControlName=\\\"type\\\">\\n            <option value=\\\"0\\\">Word</option>\\n            <option value=\\\"1\\\">Number</option>\\n          </select>\\n        </div>\\n      </div>\\n      <div class=\\\"column col-auto\\\">\\n        <label class=\\\"form-label text-light\\\">.</label>\\n        <button class=\\\"btn btn-link\\\" (click)=\\\"removeAttribute(i)\\\">\\n          Remove\\n        </button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormArray,\n  FormControl,\n  Validators,\n} from '@angular/forms';\nimport { Attribute, AttributeType } from 'src/app/attributes';\n\n@Component({\n  selector: 'dd-attribute-editor',\n  templateUrl: './attribute-editor.component.html',\n  styleUrls: ['./attribute-editor.component.css'],\n})\nexport class AttributeEditorComponent implements OnInit {\n  @Input()\n  public formGroup: FormGroup;\n\n  constructor(private formBuilder: FormBuilder) {}\n\n  public static createAttributesControl(attributes: Attribute[]): FormArray {\n    const controls: FormGroup[] = [];\n\n    for (const attr of attributes) {\n      controls.push(\n        this.createAttributeFormItem(attr.name, attr.type, attr.data)\n      );\n    }\n\n    return new FormArray(controls);\n  }\n\n  private static createAttributeFormItem(\n    presetName?: string,\n    presetType?: AttributeType,\n    presetValue?: string\n  ): FormGroup {\n    return new FormGroup({\n      name: new FormControl(presetName, [\n        Validators.required,\n        Validators.minLength(3),\n        Validators.maxLength(50),\n      ]),\n      data: new FormControl(presetValue, [\n        Validators.required,\n        Validators.maxLength(255),\n      ]),\n      type: new FormControl(\n        presetType ? presetType.toString() : AttributeType.STRING.toString(),\n        Validators.required\n      ),\n    });\n  }\n\n  ngOnInit() {\n    if (!this.formGroup.contains('attributes')) {\n      this.formGroup.addControl('attributes', this.formBuilder.array([]));\n      this.addAttribute('Weight', AttributeType.NUMBER, '10');\n    }\n  }\n\n  public addAttribute(\n    presetName?: string,\n    presetType?: AttributeType,\n    presetValue?: string\n  ) {\n    const attributes = this.formGroup.get('attributes') as FormArray;\n    attributes.push(\n      AttributeEditorComponent.createAttributeFormItem(\n        presetName,\n        presetType,\n        presetValue\n      )\n    );\n  }\n\n  public removeAttribute(i: number) {\n    const attributes = this.formGroup.get('attributes') as FormArray;\n    attributes.removeAt(i);\n  }\n\n  public getNameErrors(i: number) {\n    return this.formGroup.get(['attributes', i, 'name']).errors;\n  }\n\n  public getDataErrors(i: number) {\n    return this.formGroup.get(['attributes', i, 'data']).errors;\n  }\n\n  public getTypeErrors(i: number) {\n    return this.formGroup.get(['attributes', i, 'type']).errors;\n  }\n\n  public attributeRowHasError(i: number): boolean {\n    return this.formGroup.get(['attributes', i]).valid;\n  }\n\n  public get attributeControls() {\n    return (<FormArray>this.formGroup.get('attributes')).controls;\n  }\n}\n","module.exports = \"<dd-confirmation-modal #confirm></dd-confirmation-modal>\\n<dd-modal #itemselector>\\n  <div class=\\\"modal-title h5\\\" modal-header>Select an Item</div>\\n\\n  <div modal-body>\\n    <dd-item-view-list\\n      *ngFor=\\\"let i of items\\\"\\n      [item]=\\\"i\\\"\\n      (click)=\\\"itemselector.close(i)\\\"\\n    ></dd-item-view-list>\\n  </div>\\n</dd-modal>\\n\\n<dd-modal size=\\\"small\\\" #itemedit>\\n  <div class=\\\"modal-title h5\\\" modal-header>Edit Item</div>\\n  <div [formGroup]=\\\"itemEditorGroup\\\" modal-body>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"quantity\\\" class=\\\"form-label\\\">Quantity</label>\\n      <input\\n        type=\\\"number\\\"\\n        class=\\\"form-input\\\"\\n        name=\\\"quantity\\\"\\n        id=\\\"quantity\\\"\\n        formControlName=\\\"quantity\\\"\\n        placeholder=\\\"Quantity\\\"\\n      />\\n    </div>\\n  </div>\\n  <div modal-footer>\\n    <button class=\\\"btn btn-error mr-2\\\" (click)=\\\"removeItem()\\\">\\n      Remove Item\\n    </button>\\n    <button class=\\\"btn\\\" (click)=\\\"itemedit.close()\\\">Done</button>\\n  </div>\\n</dd-modal>\\n\\n<!-- Item display -->\\n<div class=\\\"card\\\">\\n  <div class=\\\"card-body\\\">\\n    <button class=\\\"btn btn-sm\\\" (click)=\\\"addItem()\\\">\\n      <i class=\\\"icon icon-plus\\\"></i> Add Item\\n    </button>\\n  </div>\\n  <div class=\\\"card-body d-flex item-container\\\">\\n    <!-- Repeat Cards -->\\n    <div\\n      class=\\\"item mr-1\\\"\\n      *ngFor=\\\"let i of selectedItems\\\"\\n      [style.background-image]=\\\"backgroundCSS(i.item.imageId)\\\"\\n      (click)=\\\"selectItem(i)\\\"\\n    >\\n      <h6 class=\\\"text-center\\\">{{ i.item.name }} ({{ i.quantity }})</h6>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".item {\\n  padding: 0.4rem;\\n  flex-grow: 0.2;\\n  flex-shrink: 0;\\n  min-width: 7.5rem;\\n  max-width: 8rem;\\n  color: white;\\n  background-image: url(\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_blurred_bg/uncertainty.png\\\"), linear-gradient(to top, black 0%, black 100%);\\n  background-repeat: no-repeat;\\n  background-size: cover;\\n  background-blend-mode: hard-light;\\n  transition: -webkit-transform 0.25s;\\n  transition: transform 0.25s;\\n  transition: transform 0.25s, -webkit-transform 0.25s; }\\n\\n.item:hover {\\n  -webkit-transform: translateY(-0.25rem);\\n          transform: translateY(-0.25rem);\\n  cursor: pointer; }\\n\\n.item-container {\\n  overflow-x: auto; }\\n\"","import {\n  Component,\n  OnInit,\n  ViewChild,\n  AfterContentInit,\n  Input,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FormGroup, FormControl, Validators, FormArray } from '@angular/forms';\nimport { ConfirmationModalComponent } from 'src/app/confirmation-modal/confirmation-modal.component';\nimport { ModalComponent } from 'src/app/modal/modal.component';\nimport { Item } from 'src/app/item';\nimport { ItemService } from 'src/app/item.service';\nimport { CampaignService } from 'src/app/campaign.service';\nimport { numberValidator } from 'src/app/entity/dynamic-attribute-form/dynamic-attribute-form.component';\nimport { EntityPreset } from 'src/app/entity';\nimport { InventoryItem } from 'src/app/inventory';\n\n@Component({\n  selector: 'dd-inventory-selector',\n  templateUrl: './inventory-selector.component.html',\n  styleUrls: ['./inventory-selector.component.scss'],\n})\nexport class InventorySelectorComponent implements OnInit, AfterContentInit {\n  @ViewChild('itemselector')\n  public itemSelector: ModalComponent<Item>;\n\n  @ViewChild('itemedit')\n  public itemEditor: ModalComponent<any>;\n\n  @ViewChild('confirm')\n  public confirmation: ConfirmationModalComponent;\n\n  @Input()\n  public entityPreset: EntityPreset;\n\n  @Input()\n  public formGroup: FormGroup;\n\n  public itemEditorGroup: FormGroup;\n\n  public selectedItems: InventoryItem[];\n\n  public currentItem: InventoryItem;\n\n  constructor(\n    private itemService: ItemService,\n    private sanitizer: DomSanitizer,\n    private campaignService: CampaignService\n  ) {}\n\n  ngOnInit() {\n    this.formGroup.addControl(\n      'inventory',\n      new FormGroup({\n        items: new FormArray(\n          this.entityPreset.inventory.items.map((i) => this.createControl(i))\n        ),\n      })\n    );\n\n    this.itemEditorGroup = new FormGroup({\n      quantity: new FormControl(1, [Validators.required, numberValidator]),\n    });\n\n    this.selectedItems = [];\n  }\n\n  public createControl(i: InventoryItem): FormControl {\n    return new FormControl(i.item.id, [Validators.required]);\n  }\n\n  public selectItem(item: InventoryItem) {\n    this.currentItem = item;\n    this.itemEditorGroup.setValue({ quantity: item.quantity });\n    this.itemEditor.open();\n  }\n\n  ngAfterContentInit(): void {}\n\n  public async addItem() {\n    this.itemSelector.open().then((item: Item) => {\n      if (item !== undefined) {\n        this.selectedItems.push({\n          quantity: 1,\n          item: item,\n        });\n      }\n    });\n  }\n\n  public async removeItem() {\n    const currentItem = this.currentItem;\n    this.itemEditor.close(null);\n\n    if (\n      await this.confirmation.getConfirmation(\n        'Are you sure you want to remove this item?'\n      )\n    ) {\n      console.log('removing item', this.currentItem);\n      this.selectedItems = this.selectedItems.filter(\n        (i) => i !== this.currentItem\n      );\n    } else {\n      this.selectItem(currentItem);\n    }\n  }\n\n  public imageSource(id: string): string {\n    return `https://res.cloudinary.com/dqhk8k6iv/image/upload/t_blurred_bg/${id}.png`;\n  }\n\n  public backgroundCSS(imageId: string) {\n    return this.sanitizer.bypassSecurityTrustStyle(\n      `url(\"${this.imageSource(\n        imageId\n      )}\"), linear-gradient(to top, black 0%, black 100%)`\n    );\n  }\n\n  public get items() {\n    return this.campaignService.campaign.items;\n  }\n}\n","module.exports = \"\"","module.exports = \"<dd-confirmation-modal #confirmmodal></dd-confirmation-modal>\\n<div class=\\\"container grid-xl\\\">\\n  <div class=\\\"loading loading-lg\\\" *ngIf=\\\"loading\\\"></div>\\n\\n  <div class=\\\"columns col-oneline\\\">\\n    <div class=\\\"column\\\">\\n      <a class=\\\"btn\\\" [routerLink]=\\\"['../..']\\\"\\n        ><i class=\\\"icon icon-arrow-left\\\"></i> Back</a\\n      >\\n    </div>\\n    <div class=\\\"column col-ml-auto col-auto\\\">\\n      <button\\n        class=\\\"btn btn-error mr-2\\\"\\n        [ngClass]=\\\"{ loading: deleting }\\\"\\n        [disabled]=\\\"saving\\\"\\n        (click)=\\\"delete()\\\"\\n      >\\n        Delete\\n      </button>\\n      <button\\n        class=\\\"btn\\\"\\n        [disabled]=\\\"!valid || saving\\\"\\n        (click)=\\\"save()\\\"\\n        [ngClass]=\\\"{ loading: saving }\\\"\\n      >\\n        Save\\n      </button>\\n    </div>\\n  </div>\\n  <hr />\\n  <dd-item-form *ngIf=\\\"item\\\" [inputItem]=\\\"item\\\" #iform></dd-item-form>\\n</div>\\n\"","import { Component, OnInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup } from '@angular/forms';\nimport { ItemFormComponent } from '../item-form/item-form.component';\nimport { Item } from 'src/app/item';\nimport { ConfirmationModalComponent } from 'src/app/confirmation-modal/confirmation-modal.component';\nimport { ItemService } from 'src/app/item.service';\n\n@Component({\n  selector: 'dd-item-edit',\n  templateUrl: './item-edit.component.html',\n  styleUrls: ['./item-edit.component.css'],\n})\nexport class ItemEditComponent implements OnInit {\n  public loading = false;\n  public item: Item = null;\n  public saving = false;\n  public deleting = false;\n\n  @ViewChild('confirmmodal')\n  public confirmModal: ConfirmationModalComponent;\n\n  @ViewChild('iform')\n  public form: ItemFormComponent;\n\n  public valid = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private itemService: ItemService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.route.params.subscribe((params) => {\n      const id = params.item_id;\n      this.loadItem(id);\n    });\n  }\n\n  public async save() {\n    if (!this.form || !this.form.formGroup || !this.form.formGroup.valid) {\n      return;\n    }\n\n    this.form.formGroup.disable();\n    this.saving = true;\n\n    try {\n      const itm = await this.itemService.saveItem(<Item>(\n        this.form.formGroup.value\n      ));\n    } catch (err) {\n      console.log('SAVE ERR', err);\n    }\n\n    this.saving = false;\n    this.form.formGroup.enable();\n  }\n\n  public async delete() {\n    if (\n      await this.confirmModal.getConfirmation(\n        'Are you sure you want to delete this item? This cannot be undone.'\n      )\n    ) {\n      this.deleting = true;\n      try {\n        await this.itemService.deleteItem(this.item.id);\n        this.router.navigate(['../..'], { relativeTo: this.route });\n      } catch (err) {\n        console.log('DEL ERR', err);\n      }\n\n      this.deleting = false;\n    }\n  }\n\n  private async loadItem(id: string) {\n    this.loading = true;\n    this.item = null;\n\n    try {\n      const item = await this.itemService.getItem(id);\n      this.item = item;\n    } catch (err) {\n      console.log('LOAD ERR', err);\n    }\n\n    this.loading = false;\n\n    setTimeout(() => {\n      this.setupFormListener(this.form.formGroup);\n    }, 1);\n  }\n\n  private setupFormListener(formGroup: FormGroup) {\n    formGroup.valueChanges.subscribe((v) => {\n      this.valid = formGroup.valid;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div [formGroup]=\\\"formGroup\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column col-auto\\\">\\n      <dd-image-upload [formGroup]=\\\"formGroup\\\"></dd-image-upload>\\n    </div>\\n    <div class=\\\"column\\\">\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': name.invalid }\\\">\\n        <label class=\\\"form-label label-lg\\\" for=\\\"item-name\\\">Name</label>\\n        <input\\n          class=\\\"form-input input-lg\\\"\\n          formControlName=\\\"name\\\"\\n          type=\\\"text\\\"\\n          id=\\\"item-name\\\"\\n          placeholder=\\\"Sword of Agatha\\\"\\n        />\\n        <p class=\\\"form-input-hint\\\" *ngIf=\\\"name.invalid && name.errors.required\\\">\\n          The item needs a name\\n        </p>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"name.invalid && name.errors.minlength\\\"\\n        >\\n          The name is too short\\n        </p>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"name.invalid && name.errors.maxlength\\\"\\n        >\\n          The name can't be more than 60 characters long\\n        </p>\\n      </div>\\n\\n      <div class=\\\"form-group\\\" [ngClass]=\\\"{ 'has-error': description.invalid }\\\">\\n        <label class=\\\"form-label\\\" for=\\\"item-description\\\">Description</label>\\n        <textarea\\n          class=\\\"form-input\\\"\\n          formControlName=\\\"description\\\"\\n          id=\\\"item-description\\\"\\n          rows=\\\"5\\\"\\n          placeholder=\\\"Sharp sword made of metal\\\"\\n        ></textarea>\\n        <p\\n          class=\\\"form-input-hint\\\"\\n          *ngIf=\\\"description.invalid && description.errors.required\\\"\\n        >\\n          The item needs a description\\n        </p>\\n      </div>\\n\\n      <dd-attribute-editor [formGroup]=\\\"formGroup\\\"></dd-attribute-editor>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AttributeEditorComponent } from '../attribute-editor/attribute-editor.component';\nimport { Item } from 'src/app/item';\n\n@Component({\n  selector: 'dd-item-form',\n  templateUrl: './item-form.component.html',\n  styleUrls: ['./item-form.component.css'],\n})\nexport class ItemFormComponent implements OnInit {\n  @Input()\n  public inputItem: Item;\n\n  public formGroup: FormGroup;\n\n  constructor() {}\n\n  ngOnInit() {\n    if (this.inputItem !== undefined) {\n      this.formGroup = new FormGroup({\n        name: new FormControl(this.inputItem.name, [\n          Validators.required,\n          Validators.minLength(2),\n          Validators.maxLength(60),\n        ]),\n        description: new FormControl(this.inputItem.description, Validators.required),\n        imageId: new FormControl(this.inputItem.imageId),\n        attributes: AttributeEditorComponent.createAttributesControl(this.inputItem.attributes),\n      });\n    } else {\n      this.formGroup = new FormGroup({\n        name: new FormControl(null, Validators.required),\n        description: new FormControl(null, Validators.required),\n        imageId: new FormControl('cvgvysrwdivcxjfipjry'),\n      });\n    }\n  }\n\n  public get name() {\n    return this.formGroup.controls.name;\n  }\n\n  public get description() {\n    return this.formGroup.controls.description;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container grid-xl mt-2\\\">\\n  <div class=\\\"columns col-oneline\\\">\\n    <!-- Title -->\\n    <div class=\\\"column col-auto\\\"><h3>Items</h3></div>\\n\\n    <div class=\\\"column\\\">\\n      <button\\n        class=\\\"btn\\\"\\n        (click)=\\\"addItem()\\\"\\n        [ngClass]=\\\"{ loading: creatingItem }\\\"\\n      >\\n        <i class=\\\"icon icon-plus\\\"></i>\\n      </button>\\n    </div>\\n\\n    <!-- Search -->\\n    <div class=\\\"column col-6 col-ml-auto\\\">\\n      <div class=\\\"has-icon-left\\\">\\n        <input\\n          class=\\\"form-input\\\"\\n          type=\\\"text\\\"\\n          name=\\\"search\\\"\\n          id=\\\"search\\\"\\n          placeholder=\\\"Search\\\"\\n          [formControl]=\\\"searchControl\\\"\\n        />\\n        <i class=\\\"form-icon icon icon-search\\\"></i>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div *ngFor=\\\"let item of filteredItems\\\">\\n    <dd-item-view-list\\n      [item]=\\\"item\\\"\\n      (click)=\\\"selectItem(item)\\\"\\n    ></dd-item-view-list>\\n  </div>\\n\\n  <dd-paginator\\n    [totalItems]=\\\"searchedItems.length\\\"\\n    [itemsPerPage]=\\\"itemsPerPage\\\"\\n    [page]=\\\"page\\\"\\n    (pageChange)=\\\"page = $event\\\"\\n  ></dd-paginator>\\n\\n  <div class=\\\"empty\\\" *ngIf=\\\"items.length === 0\\\">\\n    <div class=\\\"empty-icon\\\"><i class=\\\"icon icon-search icon-4x\\\"></i></div>\\n    <p class=\\\"empty-title h5\\\">There are no items</p>\\n    <p class=\\\"empty-subtitle\\\">Click the button to create one</p>\\n    <div class=\\\"empty-action\\\">\\n      <button class=\\\"btn btn-primary\\\">Create Item</button>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormControl } from '@angular/forms';\nimport { CampaignService } from 'src/app/campaign.service';\nimport { ItemService } from 'src/app/item.service';\nimport { Item } from 'src/app/item';\n\n@Component({\n  selector: 'dd-item-manager',\n  templateUrl: './item-manager.component.html',\n  styleUrls: ['./item-manager.component.css'],\n})\nexport class ItemManagerComponent implements OnInit {\n  private search: string;\n  public searchControl: FormControl;\n  public page = 1;\n  public itemsPerPage = 10;\n\n  public creatingItem = false;\n\n  constructor(\n    private campaignService: CampaignService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private itemService: ItemService\n  ) {}\n\n  ngOnInit() {\n    this.searchControl = new FormControl(null);\n\n    this.searchControl.valueChanges.subscribe((search: string) => {\n      if (!search) {\n        this.search = '';\n        return;\n      }\n\n      this.search = search.trim().toLowerCase();\n    });\n  }\n\n  public async addItem() {\n    this.creatingItem = true;\n\n    try {\n      const item: Item = {\n        id: null,\n        name: '--_blank_--',\n        description: '--_blank_--',\n        imageId: 'uncertainty',\n        attributes: [],\n      };\n\n      const id = await this.itemService.createItem();\n      this.router.navigate([id, 'edit'], { relativeTo: this.route });\n    } catch (err) {\n      console.log('ADD ERR', err);\n    }\n\n    this.creatingItem = false;\n  }\n\n  public selectItem(item: Item) {\n    this.router.navigate([item.id, 'edit'], { relativeTo: this.route });\n  }\n\n  public get items() {\n    return this.campaignService.campaign.items;\n  }\n\n  public get searchedItems() {\n    if (this.search && this.search !== '') {\n      return this.items.slice().filter((i) => {\n        return (\n          i.name.toLowerCase().indexOf(this.search) !== -1 ||\n          i.description.toLowerCase().indexOf(this.search) !== -1\n        );\n      });\n    } else {\n      return this.items;\n    }\n  }\n\n  public get filteredItems(): Item[] {\n    return this.searchedItems.slice(\n      this.page * this.itemsPerPage - this.itemsPerPage,\n      this.page * this.itemsPerPage\n    );\n  }\n}\n","module.exports = \"<div class=\\\"columns hoverable p-1\\\">\\n  <div class=\\\"column col-auto\\\">\\n    <figure class=\\\"avatar avatar-lg\\\" *ngIf=\\\"item.imageId\\\">\\n      <img\\n        src=\\\"https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/{{\\n          item.imageId\\n        }}.png\\\"\\n      />\\n    </figure>\\n  </div>\\n  <div class=\\\"column d-flex flex-col\\\">\\n    <h5 class=\\\"mb-0\\\">{{ item.name }}</h5>\\n    <span class=\\\"text-gray\\\">{{ item.description | truncate: 150 }}</span>\\n  </div>\\n</div>\\n\"","module.exports = \"\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Item } from 'src/app/item';\n\n@Component({\n  selector: 'dd-item-view-list',\n  templateUrl: './item-view-list.component.html',\n  styleUrls: ['./item-view-list.component.scss'],\n})\nexport class ItemViewListComponent implements OnInit {\n  @Input()\n  public item: Item;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public get imageURL() {\n    if (this.item.imageId) {\n      return `https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/${this.item.imageId}.png`;\n    } else {\n      return 'https://res.cloudinary.com/dqhk8k6iv/image/upload/t_thumb/uncertainty.png';\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggedInGuard implements CanActivate {\n  constructor(private login: LoginService, private router: Router) {}\n\n  public async canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    const isLoggedIn = await this.login.isLoggedIn();\n\n    if (!isLoggedIn) {\n      this.router.navigate(['login']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginPageGuard implements CanActivate {\n  constructor(private login: LoginService, private router: Router) {}\n\n  public async canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Promise<boolean> {\n    const isLoggedIn = await this.login.isLoggedIn();\n\n    if (isLoggedIn) {\n      this.router.navigate(['home']);\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { WebAuth, Auth0DecodedHash, Auth0UserProfile } from 'auth0-js';\nimport { environment } from 'src/environments/environment';\nimport { User } from './user';\nimport { UserService, IUser } from './user.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ActionQueueService, ActionType } from './action-queue.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  private auth: WebAuth;\n  private userData: IUser;\n\n  public loginCompleted = false;\n  public loginInProgress = false;\n  public authData: Auth0UserProfile;\n\n  private loginPromise: Promise<boolean>;\n\n  constructor(\n    private userService: UserService,\n    private router: Router,\n    private actions: ActionQueueService\n  ) {}\n\n  private getAuth(): WebAuth {\n    if (this.auth === undefined) {\n      this.auth = new WebAuth({\n        domain: environment.auth0Domain,\n        clientID: environment.auth0ClientId,\n        responseType: 'token',\n        redirectUri: `${location.protocol}//${location.host}/callback`,\n        audience: 'https://dd.panchem.io',\n      });\n    }\n\n    return this.auth;\n  }\n\n  public resetLoginStatus() {\n    this.loginPromise = undefined;\n    this.loginInProgress = false;\n    this.loginCompleted = false;\n  }\n\n  public async isLoggedIn(): Promise<boolean> {\n    if (this.loginPromise === undefined) {\n      this.loginPromise = new Promise<boolean>(async (resolve, reject) => {\n        this.loginInProgress = true;\n        const token = this.loadToken();\n\n        if (token === null) {\n          resolve(false);\n          this.loginInProgress = false;\n          return;\n        }\n\n        try {\n          const userInfo = await this.getUserInfo(token);\n          this.authData = userInfo;\n          let user;\n\n          try {\n            user = await this.userService.getUser(this.authData.sub);\n          } catch (err) {\n            if (err instanceof HttpErrorResponse) {\n              if (err.status === 404) {\n                this.loginInProgress = false;\n                this.actions.queue.push({\n                  type: ActionType.ACCOUNT_SETUP,\n                  data: {},\n                });\n                this.actions.save();\n                this.router.navigate(['register']);\n                resolve(false);\n                return;\n              } else {\n                throw err;\n              }\n            } else {\n              throw err;\n            }\n          }\n\n          this.userData = user;\n\n          this.loginCompleted = true;\n          resolve(true);\n        } catch (err) {\n          console.log('AUTH ERR', err);\n          localStorage.removeItem('auth-token');\n          resolve(false);\n        }\n\n        this.loginInProgress = false;\n      });\n    }\n\n    return this.loginPromise;\n  }\n\n  private getUserInfo(token: string): Promise<Auth0UserProfile> {\n    const auth = this.getAuth();\n\n    return new Promise((resolve, reject) => {\n      auth.client.userInfo(token, (err, res) => {\n        if (err !== null) {\n          reject(err);\n        } else {\n          resolve(res);\n        }\n      });\n    });\n  }\n\n  public saveToken(token: string) {\n    localStorage.setItem('auth-token', token);\n  }\n\n  public loadToken(): string | null {\n    const token = localStorage.getItem('auth-token');\n    return token;\n  }\n\n  public authorize(connection: string) {\n    const auth = this.getAuth();\n\n    auth.authorize({\n      connection,\n    });\n  }\n\n  public async logout(): Promise<void> {\n    localStorage.removeItem('auth-token');\n    this.loginCompleted = false;\n    this.loginInProgress = false;\n    this.loginPromise = undefined;\n  }\n\n  public process(hash: string, state: string): Promise<Auth0DecodedHash> {\n    const auth = this.getAuth();\n\n    return new Promise((resolve, reject) => {\n      auth.parseHash(\n        {\n          hash,\n          state,\n        },\n        (err, result) => {\n          if (err) {\n            reject(err);\n          } else {\n            resolve(result);\n          }\n        }\n      );\n    });\n  }\n\n  public setUserData(userData: IUser) {\n    this.userData = userData;\n  }\n\n  public get user(): IUser {\n    return this.userData;\n  }\n\n  public get loggedIn() {\n    return this.loginCompleted;\n  }\n\n  public get id() {\n    return this.authData.sub;\n  }\n}\n","module.exports = \".wide {\\n  width: 100%;\\n}\\n\"","module.exports = \"<div class=\\\"container grid-xl\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column col-5 col-md-8 col-sm-11 col-mx-auto\\\">\\n      <!-- Login Buttons -->\\n      <div class=\\\"card text-center\\\" *ngIf=\\\"!processing\\\">\\n        <div class=\\\"card-header\\\"><h2>Login</h2></div>\\n        <div class=\\\"card-body\\\">\\n          <button class=\\\"btn btn-lg btn-primary wide\\\" (click)=\\\"authGoog()\\\">Google</button>\\n          <div class=\\\"divider\\\" data-content=\\\"OR\\\"></div>\\n          <button class=\\\"btn btn-lg btn-primary wide\\\" (click)=\\\"authFb()\\\">Facebook</button>\\n        </div>\\n      </div>\\n\\n      <!-- Loading Indicator -->\\n      <div class=\\\"card text-center\\\" *ngIf=\\\"processing\\\">\\n        <div class=\\\"card-body\\\">\\n          <h6>Processing Information...</h6>\\n          <div class=\\\"loading\\\"></div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../login.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'dd-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  public processing = false;\n\n  constructor(\n    private login: LoginService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  public async ngOnInit() {\n    const mode = this.route.snapshot.url[0].path;\n\n    if (mode === 'callback') {\n      this.processing = true;\n\n      try {\n        const auth = await this.login.process(window.location.hash, null);\n\n        this.login.saveToken(auth.accessToken);\n        const loginSuccess = await this.login.isLoggedIn();\n\n        if (loginSuccess) {\n          this.router.navigate(['home']);\n        }\n      } catch (err) {\n        console.log('Process ERR', err);\n      }\n      this.processing = false;\n    }\n  }\n\n  public authGoog() {\n    this.login.authorize('google-oauth2');\n  }\n\n  public authFb() {\n    this.login.authorize('facebook');\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container grid-xl\\\">\\n  <div class=\\\"columns\\\">\\n    <div class=\\\"column col-6 col-md-8 col-sm-12 col-mx-auto\\\">\\n      <div class=\\\"card\\\">\\n        <div class=\\\"card-header\\\">\\n          <h3 class=\\\"mb-0\\\">Username</h3>\\n          <span class=\\\"text-gray text-italic\\\">What should we call you?</span>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <form (ngSubmit)=\\\"submit()\\\">\\n            <div\\n              class=\\\"form-group\\\"\\n              [ngClass]=\\\"{\\n                'has-error': usernameControl.invalid && (usernameControl.touched || usernameControl.dirty),\\n                'has-success': usernameControl.valid\\n              }\\\"\\n            >\\n              <input\\n                type=\\\"text\\\"\\n                name=\\\"username\\\"\\n                id=\\\"username\\\"\\n                [formControl]=\\\"usernameControl\\\"\\n                class=\\\"form-input\\\"\\n                placeholder=\\\"Jimbo\\\"\\n              />\\n            </div>\\n          </form>\\n        </div>\\n\\n        <div class=\\\"card-footer\\\">\\n          <button\\n            class=\\\"btn btn-primary float-right\\\"\\n            [ngClass]=\\\"{ loading: loading }\\\"\\n            [disabled]=\\\"usernameControl.invalid\\\"\\n            (click)=\\\"submit()\\\"\\n          >\\n            Done <i class=\\\"icon icon-arrow-right\\\"></i>\\n          </button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { LoginService } from 'src/app/login.service';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/user.service';\nimport { ActionQueueService } from 'src/app/action-queue.service';\n\n@Component({\n  selector: 'dd-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css'],\n})\nexport class RegisterComponent implements OnInit {\n  public loading = false;\n  public usernameControl: FormControl;\n\n  constructor(\n    private login: LoginService,\n    public userService: UserService,\n    private router: Router,\n    private action: ActionQueueService\n  ) {}\n\n  ngOnInit() {\n    this.usernameControl = new FormControl(null, [\n      Validators.required,\n      Validators.minLength(3),\n      Validators.maxLength(30),\n    ]);\n  }\n\n  public async submit() {\n    if (this.usernameControl.valid) {\n      this.loading = true;\n      try {\n        const newUser = await this.userService.createUser({\n          id: this.login.id,\n          username: this.usernameControl.value,\n          pictureURl: this.login.authData.picture,\n        });\n\n        this.login.setUserData(newUser);\n        this.login.resetLoginStatus();\n\n        this.action.queue.pop();\n        this.action.save();\n\n        this.router.navigate(['home']);\n      } catch (err) {\n        console.log('REGISTER ERR', err);\n        this.router.navigate(['home']);\n      }\n\n      this.loading = false;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div\\n  class=\\\"modal\\\"\\n  [ngClass]=\\\"{\\n    active: isOpen,\\n    'modal-sm': size === 'small',\\n    'modal-lg': size === 'large'\\n  }\\\"\\n>\\n  <a (click)=\\\"close()\\\" class=\\\"modal-overlay\\\" aria-label=\\\"Close\\\"></a>\\n  <div class=\\\"modal-container\\\">\\n    <div class=\\\"modal-header\\\">\\n      <a\\n        (click)=\\\"close()\\\"\\n        class=\\\"btn btn-clear float-right\\\"\\n        aria-label=\\\"Close\\\"\\n      ></a>\\n      <ng-content select=\\\"[modal-header]\\\"></ng-content>\\n    </div>\\n    <div class=\\\"modal-body\\\">\\n      <div class=\\\"content\\\"><ng-content select=\\\"[modal-body]\\\"></ng-content></div>\\n    </div>\\n    <div class=\\\"modal-footer\\\">\\n      <ng-content select=\\\"[modal-footer]\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'dd-modal',\n  templateUrl: './modal.component.html',\n  styleUrls: ['./modal.component.css'],\n})\nexport class ModalComponent<T> implements OnInit {\n  @Input()\n  public size = 'normal';\n\n  protected openPromise: Promise<T>;\n\n  protected resolve: any;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public open(): Promise<T> {\n    if (this.openPromise !== undefined) {\n      throw new Error('Cannot open modal when it is already open');\n    }\n\n    this.openPromise = new Promise((resolve, reject) => {\n      this.resolve = resolve;\n    });\n\n    return this.openPromise;\n  }\n\n  public close(val: T): Promise<T> {\n    if (this.openPromise === undefined) {\n      throw new Error('Cannot close modal when it has not been opened');\n    }\n\n    const prom = this.openPromise;\n\n    this.resolve(val);\n    this.openPromise = undefined;\n    this.resolve = undefined;\n\n    return prom;\n  }\n\n  public get isOpen() {\n    return this.openPromise !== undefined;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"bg-gray mb-2\\\">\\n  <div class=\\\"container grid-xl py-2\\\">\\n    <header class=\\\"navbar\\\">\\n      <section class=\\\"navbar-section\\\" *ngIf=\\\"!loggedIn && !loginInProgress\\\">\\n        <a [routerLink]=\\\"['login']\\\" class=\\\"btn btn-link\\\">Login</a>\\n      </section>\\n      <section class=\\\"navbar-section\\\" *ngIf=\\\"loggedIn || loginInProgress\\\">\\n        <a href=\\\"#\\\" class=\\\"btn btn-link\\\">Characters</a>\\n        <a [routerLink]=\\\"['campaigns', 'list']\\\" class=\\\"btn btn-link\\\"\\n          >Campaigns</a\\n        >\\n        <button (click)=\\\"logOut()\\\" class=\\\"btn btn-link\\\">Logout</button>\\n      </section>\\n      <section class=\\\"navbar-center\\\">\\n        <a [routerLink]=\\\"['home']\\\">\\n          <img src=\\\"/assets/logo.svg\\\" width=\\\"32\\\" />\\n        </a>\\n      </section>\\n      <section class=\\\"navbar-section\\\" *ngIf=\\\"campaign !== null\\\">\\n        <a\\n          class=\\\"btn btn-link\\\"\\n          [routerLink]=\\\"['campaigns', campaign.id, 'landing']\\\"\\n        >\\n          {{ campaign.name }}\\n        </a>\\n        <a\\n          [routerLink]=\\\"['campaign', 'manage', campaign.id, 'items']\\\"\\n          class=\\\"btn btn-link\\\"\\n          >Items</a\\n        >\\n        <a href=\\\"#\\\" class=\\\"btn btn-link\\\">Places</a>\\n        <a\\n          [routerLink]=\\\"['campaign', 'manage', campaign.id, 'quests']\\\"\\n          class=\\\"btn btn-link\\\"\\n          >Quests</a\\n        >\\n        <a class=\\\"btn btn-link\\\">Sessions</a>\\n        <a [routerLink]=\\\"['campaign', 'manage', campaign.id, 'settings']\\\"\\n          ><i class=\\\"icon icon-menu\\\"></i\\n        ></a>\\n      </section>\\n      <section\\n        class=\\\"navbar-section\\\"\\n        *ngIf=\\\"campaign === null && (loggedIn || loginInProgress)\\\"\\n      >\\n        <div class=\\\"loading\\\" *ngIf=\\\"loadingCampaign\\\"></div>\\n        <span class=\\\"text-grey text-italic mr-2\\\" *ngIf=\\\"!loadingCampaign\\\"\\n          >No campaign selected</span\\n        >\\n      </section>\\n      <section\\n        class=\\\"navbar-section\\\"\\n        *ngIf=\\\"!loggedIn && !loginInProgress\\\"\\n      ></section>\\n    </header>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CampaignService } from '../campaign.service';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'dd-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css'],\n})\nexport class NavComponent implements OnInit {\n  constructor(\n    private campaignService: CampaignService,\n    private login: LoginService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  public logOut() {\n    this.login.logout();\n    this.router.navigate(['login']);\n  }\n\n  public get loadingCampaign() {\n    return this.campaignService.loadingCampaign;\n  }\n\n  public get campaign() {\n    return this.campaignService.campaign;\n  }\n\n  public get loggedIn() {\n    return this.login.loggedIn;\n  }\n\n  public get loginInProgress() {\n    return this.login.loginInProgress;\n  }\n}\n","module.exports = \".pagination {\\n  justify-content: center;\\n}\\n\"","module.exports = \"<ul class=\\\"pagination\\\">\\n  <li class=\\\"page-item\\\">\\n    <button class=\\\"btn btn-link\\\" (click)=\\\"prev()\\\" [disabled]=\\\"!canPrev\\\">\\n      <i class=\\\"icon icon-arrow-left\\\"></i>\\n    </button>\\n  </li>\\n  <li class=\\\"page-item\\\" *ngFor=\\\"let p of pageArr\\\">\\n    <button\\n      class=\\\"btn\\\"\\n      [ngClass]=\\\"{ 'btn-primary': page === p, 'btn-link': page !== p }\\\"\\n      (click)=\\\"setPage(p)\\\"\\n    >\\n      {{ p }}\\n    </button>\\n  </li>\\n  <li class=\\\"page-item\\\">\\n    <button class=\\\"btn btn-link\\\" (click)=\\\"next()\\\" [disabled]=\\\"!canNext\\\">\\n      <i class=\\\"icon icon-arrow-right\\\"></i>\\n    </button>\\n  </li>\\n</ul>\\n\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'dd-paginator',\n  templateUrl: './paginator.component.html',\n  styleUrls: ['./paginator.component.css'],\n})\nexport class PaginatorComponent implements OnInit {\n  @Input()\n  public totalItems: number;\n\n  @Input()\n  public itemsPerPage: number = 5;\n\n  @Input()\n  public page: number = 0;\n\n  @Output()\n  public pageChange = new EventEmitter<number>();\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  public get numPages() {\n    return Math.ceil(this.totalItems / this.itemsPerPage);\n  }\n\n  public next() {\n    if (this.canNext) {\n      this.page++;\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  public prev() {\n    if (this.canPrev) {\n      this.page--;\n      this.pageChange.emit(this.page);\n    }\n  }\n\n  public setPage(page: number) {\n    this.page = page;\n    this.pageChange.emit(this.page);\n  }\n\n  public get pageArr(): number[] {\n    const pageArr: number[] = [];\n\n    for (let i = 1; i < this.numPages + 1; i++) {\n      pageArr.push(i);\n    }\n\n    return pageArr;\n  }\n\n  public get canNext() {\n    return this.page < this.numPages;\n  }\n\n  public get canPrev() {\n    return this.page > 1;\n  }\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  quest-form works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'dd-quest-form',\n  templateUrl: './quest-form.component.html',\n  styleUrls: ['./quest-form.component.css']\n})\nexport class QuestFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"loading loading-lg\\\" *ngIf=\\\"loading\\\"></div>\\n<div class=\\\"container grid-xl\\\" *ngIf=\\\"quests\\\">\\n  <h3>Quests</h3>\\n\\n  <!-- Quest List -->\\n  <div *ngFor=\\\"let q of quests\\\">\\n    <div class=\\\"card p-2 hoverable mb-2\\\">\\n      <h4 class=\\\"mb-0\\\">{{ q.name }}</h4>\\n      <span class=\\\"text-gray\\\">{{ q.description | truncate: 150 }}</span>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Quest } from 'src/app/quest';\n\n@Component({\n  selector: 'dd-quest-manager',\n  templateUrl: './quest-manager.component.html',\n  styleUrls: ['./quest-manager.component.css'],\n})\nexport class QuestManagerComponent implements OnInit {\n  public loading = false;\n  public quests: Quest[];\n\n  constructor() {}\n\n  ngOnInit() {\n    this.loadQuests();\n  }\n\n  private async loadQuests() {\n    this.loading = true;\n\n    try {\n      // const resp = await this.rpc.dd.getQuests({});\n      // this.quests = resp.quests;\n    } catch (err) {\n      console.log('LOAD ERR', err);\n    }\n\n    this.loading = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  public getUser(id: string): Promise<IUser> {\n    return this.http\n      .get<IUser>(`${environment.apiURL}/users/${id}`)\n      .toPromise();\n  }\n\n  public createUser(user: IUser): Promise<IUser> {\n    return this.http\n      .post<IUser>(`${environment.apiURL}/users`, user)\n      .toPromise();\n  }\n}\n\nexport interface IUser {\n  id: string;\n  username: string;\n  pictureURl: string;\n  createdAt?: Date;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  auth0Domain: 'panch-dd.auth0.com',\n  auth0ClientId: 'wtWPWeaJjR4hbWYi4hJuduRDDFVn97Fn',\n  apiURL: 'http://localhost:5000/api',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"],"sourceRoot":""}